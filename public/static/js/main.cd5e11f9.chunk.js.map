{"version":3,"sources":["tools/pathFunctions.js","tools/productService.js","components/client-side/products/Category.jsx","components/styled-components/client-side.js","components/client-side/menu/ClientMenu.jsx","components/styled-components/admin-side.js","components/admin-side/menu/AddProduct.jsx","components/styled-components/common-side.js","components/common/GenericTable.jsx","components/admin-side/menu/CategoryList.jsx","components/admin-side/menu/AdminProduct.jsx","components/admin-side/menu/EditProduct.jsx","components/admin-side/menu/AdminMenu.jsx","components/common/Menu.jsx","tools/userAuth.js","components/common/Login.jsx","components/common/Signup.jsx","components/common/NavBar.jsx","components/common/LoadingPage.jsx","components/client-side/home/ClientHome.jsx","tools/ordersService.js","components/admin-side/home/MostSelledChart.jsx","components/admin-side/home/Last30DaysChart.jsx","components/admin-side/home/AdminHome.jsx","components/common/Home.jsx","components/common/NoMatch.jsx","components/common/UnderConstruction.jsx","components/common/Header.jsx","components/client-side/products/ProductDetails.jsx","tools/cartService.js","components/client-side/products/ClientProduct.jsx","components/client-side/products/ProductList.jsx","components/client-side/profile/ProfileForm.jsx","tools/dateService.js","components/client-side/profile/CurrentOrders.jsx","components/client-side/profile/Profile.jsx","components/client-side/cart/CartElement.jsx","components/client-side/cart/Cart.jsx","components/client-side/order/ClientOrderDetails.jsx","components/client-side/dailyMenu/ClientDailyMenu.jsx","components/admin-side/FlowControl.jsx","components/admin-side/Orders/Tables/OrdersTable.jsx","components/admin-side/Orders/Tables/InProgress.jsx","components/admin-side/Orders/Tables/IncomingOrders.jsx","components/admin-side/Orders/Tables/AllOrders.jsx","components/admin-side/Orders/Orders.jsx","tools/configService.js","components/admin-side/Orders/OrderDetails.jsx","components/admin-side/config/ConfigForm.jsx","components/admin-side/config/Config.jsx","tools/dailyMenuService.js","components/admin-side/dailyMenu/DailyMenuForm.jsx","components/admin-side/dailyMenu/AdminDailyMenu.jsx","App.js","serviceWorker.js","redux/actions/userActions.js","redux/reducers/userReducer.js","redux/actions/configActions.js","redux/actions/productsActions.js","redux/reducers/productsReducer.js","redux/actions/cartActions.js","redux/reducers/cartReducers.js","redux/actions/dailyMenuActions.js","redux/store.js","redux/reducers/configReducer.js","redux/reducers/dailyMenuReducers.js","index.js"],"names":["isAdminRoute","path","includes","this","URL","process","cb","axios","get","then","res","data","currentCategory","post","id","delete","getAllProducts","image","url","Category","category","history","useHistory","useSelector","state","products","find","product","className","onClick","push","style","backgroundImage","StyledClientHome","styled","div","StyledClientMenu","StyledClientProductList","StyledClientNav","nav","StyledClientProductDetails","StyledClientCart","StyledClientCartElement","li","StyledClientProfile","StyledClientDailyMenu","ClientMenu","categories","renderCategoriesClientSide","length","map","key","StyledAdminNav","StyledAdminMenu","StyledAddProductForm","StyledAdminProduct","StyledAdminOrders","StyledAdminSingleOrder","StyledAdminHome","StyledAdminConfig","StyledConfigForm","StyledFlowControl","StyledFormDailyMenu","form","StyledDailyMenu","AddProduct","updateList","setForm","initialState","handleChange","target","name","value","description","price","ingredients","onSubmit","e","preventDefault","productService","addProduct","toast","success","autoClose","catch","error","htmlFor","type","onChange","cols","rows","min","step","info","imageToUpload","FormData","append","files","upload","StyledLoginSignup","StyledGenericList","ul","StyledNoMatch","StyledLoadingPage","GenericTable","content","CategoryList","categoryNames","AdminProduct","dispatch","setEditForm","goEdit","productList","_id","productId","productToEdit","deleteProduct","EditProduct","setIsEditing","handleImageUrl","a","cancelEdit","editProduct","AdminMenu","uniqueCategories","addForminitialState","undefined","editFormInitialState","useState","addForm","setAddForm","editForm","isEditing","actionForm","categoryList","Menu","props","useDispatch","sendDataToRedux","payload","getProductsAndDispatch","forceUpdate","useEffect","Set","match","body","toLocalStorage","adminPermissions","localStorage","setItem","JSON","stringify","removeItem","isAdmin","console","userData","err","Login","email","password","loginForm","setLoginForm","handleSubmit","authCB","userAuth","login","placeholder","to","Signup","rootPassword","signup","go","NavBar","pathname","useLocation","user","showSidenav","setShowSidenav","isClientHome","loginButtonOnNav","profileButtonOnNav","adminButtonOnNav","rotateIcon","action","degrees","document","getElementById","transform","isOpen","width","openNav","exact","logout","LoadingPage","src","alt","ClientHome","config","logo","orders","singleOrder","getAllOrders","dataFromDB","normalizedData","flatMap","order","qty","getQuantities","dataReduced","forEach","prod","ordersFilteredByDate","filter","orderDate","moment","createdAt","diff","amount","date","format","sort","b","ordersArr","el","MostSelledChart","chartContainer","chartName","useRef","setChartInstance","getFiveElements","chartConfig","labels","datasets","backgroundColor","borderColor","borderWidth","options","legend","display","scales","yAxes","ticks","beginAtZero","current","newChartInstance","Chartjs","ref","Last30DaysChart","AdminHome","mostSelled","setMostSelled","last30Days","setLast30Days","orderService","mostSelledProducts","getLast30Days","Home","NoMatch","Header","text","goBack","ProductDetails","currentProductId","params","productSelected","currentProduct","setCurrentProduct","hasStoredProduct","getSingleProduct","useSelectedProduct","elem","localStoragePath","currentCart","parse","productIndex","productListUpdated","idx","hasCurrentUser","currentUser","updatedUser","cart","clientId","totalAmount","client","response","removeCartFromLocalStorage","status","ClientProduct","cartAction","cartService","increaseQty","addToCart","ProductList","renderProducts","storedProducts","cat","currentProducts","setCurrentProducts","hasStoredProducts","getCategory","useSelectedProductList","ProfileForm","formData","setFormData","city","street","number","door","updateUser","timestamp","Date","toLocaleDateString","toLocaleTimeString","CurrentOrders","displayOrders","easyId","dateService","getDate","reverse","Profile","displayForm","setDisplayForm","setDisplayOrders","CartElement","element","removeElement","productToShow","useCurrentCartElement","Cart","clientEmail","setClientEmail","setTotalAmount","getTotalAmount","reduce","acc","emptyCart","sendOrder","sendCart","newOrder","addOrderToLocalStorage","productToRemove","findIndex","removeElementFromCart","renderCartElement","hasCartContent","OrderDetails","orderData","setOrderData","orderId","ordersService","getSingleOrder","phone","ticketLogo","displayProductList","getTime","ClientDailyMenu","dailyMenu","starters","mains","desserts","displayProducts","arr","split","FlowControl","children","OrdersTable","tableheads","tbody","renderTableHeads","InProgress","currentOrders","redirectToDetails","IncomingOrders","AllOrders","isFinished","inProgress","st1","st2","displayStatus","Orders","allOrders","setAllOrders","incomingOrders","setIncomingOrders","ordersInProgress","setOrdersInProgress","ordersCb","getIncomingOrders","getOrdersInProgress","updatedConfig","currentOrder","setCurrentOrder","getOrderData","useOrderStored","actionFunctions","startOrder","position","draggable","finishOrder","displayActionButton","ConfigForm","configData","sendConfigToRedux","configService","sendConfig","Config","withBread","withCoffee","unifyArray","join","normalizeArrays","string","word","trim","updatedDailyMenu","DailyMenuForm","dailyMenuService","getDailyMenu","sendDailyMenu","AdminDailyMenu","App","mainViewSelector","sendDailyMenuToRedux","configCb","dMenuCb","getConfig","component","render","UnderConstruction","ClientOrderDetails","Boolean","window","location","hostname","logUser","addOrder","initialUser","getItem","setConfig","setProducts","initialProducts","qtyUp","Object","assign","item","itemRequired","qtyDwn","removeProduct","initialCart","setDailyMenu","allReducers","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.cd5e11f9.chunk.js","sourcesContent":["const isAdminRoute = path => path.includes('admin')\n\nexport { isAdminRoute }","import axios from 'axios'\n\nclass ProductService {\n    constructor() {\n        this.URL = `${process.env.REACT_APP_API_URL}`\n    }\n\n    getAllProducts(cb) {\n        axios.get(`${this.URL}/menu`)\n            .then(res => {\n                if (cb) return cb(res.data)\n\n                return res.data\n            })\n    }\n    \n    async getCategory(currentCategory) {\n        const { data } = await axios.get(`${this.URL}/category/${currentCategory}`)\n        return data\n    }\n\n    async addProduct(data) {\n        await axios.post(`${this.URL}/admin/addproduct`, data)\n    }\n\n    async editProduct(data) {\n        await axios.post(`${this.URL}/admin/editproduct`, data)\n    }\n\n    async getSingleProduct(id) {\n        const { data } = await axios.get(`${this.URL}/product/${id}`) \n        return data\n    }\n\n\n    async deleteProduct(id, cb) {\n        await axios.delete(`${this.URL}/deleteproduct/${id}`)\n        this.getAllProducts(cb)\n    }\n\n    async upload(image) {\n        const { data } = await axios.post(this.URL + '/admin/imageupload', image)\n        return data.url\n    }\n}\n\nexport default new ProductService()","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nfunction Category({category}) {\n    const history = useHistory()\n    const currentCategories = useSelector(state => state.products).find(product => product.category === category)\n\n    const { image } = currentCategories\n\n    const redirectToProductList = () => history.push(`/menu/${category}`)\n\n    return (\n        <div \n            className=\"food-container border blackboard-bg\" \n            onClick={redirectToProductList}>\n            <div className=\"food-image\" style={{ backgroundImage: `url(${image})` }}>\n            </div>\n            <div className=\"text-container blackboard-bg\">\n                <h3 className=\"\">{category}</h3>\n            </div>\n        </div>\n    )\n}\n\nexport default Category\n","import styled from 'styled-components'\n\nconst StyledClientHome = styled.div`\n        #header-locations {\n            text-align: center;\n            width: 100%;\n            padding: .3em 0;\n            background-color: black;\n            & i {\n                padding-right: .35em;\n            }\n            a {\n                color: white;\n                font-size: 16px;\n                font-weight: 600;\n                text-decoration: none;\n            }\n        }\n        header {\n            height: 100vh;\n        }\n        #head-logo {\n            width: 100%;\n            & img {\n                width: 100%;\n            }\n        }\n        #head-img {\n            width: 100%;\n            height: 100%;\n            background-image: linear-gradient(\n                                rgba(0, 0, 0, 0.5),\n                                rgba(0, 0, 0, 0.5)\n                                ),\n                                url(\"https://res.cloudinary.com/dkejgwlha/image/upload/v1599485327/RestManager/BeFunky-photo_eyucrz.jpg\");\n            background-repeat: no-repeat;\n            background-size: cover;\n            & ::before {\n                background-color: \n            }\n        }\n        nav {\n            width: 100%;\n            display: flex;\n            flex-direction: column;\n            margin-top: 8em;\n            & a {\n                color: white;\n                text-decoration: none;\n                font-size: 18px;\n                font-weight: 600;\n                text-transform: uppercase;\n            }\n            div {\n                display: flex;\n                justify-content: space-around;\n                margin: .5em 0;\n            }\n        }\n        @media (min-width: 768px) {\n            #head-logo {\n                width: 100%;\n                display: flex;\n                justify-content: center;\n            }\n            #head-logo img {\n                width: 50%;\n            }\n            nav a, #header-locations a {\n                font-size: 24px;\n            }\n        }\n        @media (min-width: 1024px) {\n            #head-logo img {\n                width: 25%;\n            }\n            nav a, #header-locations a {\n                font-size: 32px;\n            }\n        }\n    `\n\nconst StyledClientMenu = styled.div`\n        display: grid;\n        grid-auto-flow: columns;\n        grid-template-columns: repeat(auto-fill, 150px);\n        @media (min-width: 768px) {\n            grid-template-columns: repeat(auto-fill, 300px);\n        }\n        gap: 25px;\n        justify-content: center;\n        padding: 2em 0 5em;\n        .food-container {\n            justify-content:center;\n            text-align: center;\n            padding: 1em 0 0 0;\n            box-shadow: 8px 8px 7px 0px rgba(0,0,0,0.10);\n        }\n        .food-image {\n            width: 100%;\n            height: 28vh;\n            background-size: cover;\n            background-repeat: no-repeat;\n            background-position: center;\n            border-radius: 25px 0 0 0;\n        }\n        .border {\n            border-radius: 25px 0 25px 0;\n        }\n        .text-container {\n            border-radius: 0 0 25px 0;\n            padding: .8em 0;\n            color: white;\n        }\n        .text-container p {\n            font-size: 1.5em;\n            font-weight: 700;\n            margin: .25em 0;\n        }\n        .text-container div {\n            display: flex;\n            justify-content: space-around;\n            align-items: center;\n            font-size: 1.4em;\n        }\n        .text-container i {\n            font-size: 1.6em;\n        }\n    `\n\nconst StyledClientProductList = styled.div`\n        #main-content {\n            padding: 2em 0 5em;\n            display: grid;\n            grid-auto-flow: columns;\n            grid-template-columns: repeat(auto-fill, 300px);\n            gap: 25px;\n            justify-content: center;\n        }\n        .food-container {\n            justify-content:center;\n            text-align: center;\n            background-color: var(--blue-btn);\n            padding: 1em 0 0 0;\n            box-shadow: 8px 8px 7px 0px rgba(0,0,0,0.10);\n        }\n        .food-image {\n            width: 100%;\n            height: 28vh;\n            background-size: cover;\n            background-repeat: no-repeat;\n            background-position: center;\n            border-radius: 25px 0 0 0;\n            color: white;\n            display: flex;\n            align-items: flex-end;\n            justify-content: center;\n            & h2 {\n                padding-bottom: .8em;\n                font-size: 1.9em;\n            }\n        }\n        .border {\n            border-radius: 25px 0 25px 0;\n        }\n        .text-container {\n            background-color: #fafbfc;\n            border-radius: 0 0 25px 0;\n            padding: .8em 0;\n        }\n        .text-container p {\n            font-size: 1.5em;\n            font-weight: 700;\n            margin: .25em 0;\n        }\n        .text-container div {\n            display: flex;\n            justify-content: space-around;\n            align-items: center;\n            font-size: 1.4em;\n            \n        }\n        .text-container i {\n            font-size: 1.6em;\n        }\n        a {\n            color: white;\n        }\n    `\n\nconst StyledClientNav = styled.nav`\n        position: fixed;\n        bottom: 0;\n        overflow: hidden;\n        width: 100%;\n        padding: 0.25em 0;\n        display: flex;\n        justify-content: space-around;\n        align-items: center;\n        border-radius: 10px 10px 0 0;\n        .nav-element {\n            text-align: center;\n            color: var(--background-color)\n        }\n        p {\n            font-size: 16px;\n        }\n        i {\n            font-size: 1.4em;\n            padding: 0.5em;\n            width: 50px;\n            text-align: center;\n        }\n        .active i , .active p{\n            color: var(--blue-btn);\n        }\n    `\n\nconst StyledClientSingleProduct = styled.div`\n    .food-container {\n        height: 100%;\n        margin-top: 2em;\n    }\n    .food-image {\n        width: 300px;\n        height: 300px;\n        background-size: cover;\n        background-repeat: no-repeat;\n        background-position: center;\n    }\n    .text-container {\n        text-align: center;\n        margin-top: 2em;\n    }\n    h4 {\n        font-size: 1.5em;\n    }\n`\n\nconst StyledClientProductDetails = styled.div`\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    li {\n            list-style: none;\n        }\n    #product-container {\n        width: 100%;\n        min-height: 85vh;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n    }\n    #product-info {\n        width: 90%;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        text-align: center;\n        border: 1px solid black;\n        border-radius: 25px;\n        padding: 2em 0;\n        & p {\n            padding: .5em 0;\n        }\n        #price {\n            font-size: 2em;\n            font-weight: 600;\n            padding: .5em 0;\n        }\n    }\n`\nconst StyledClientCart = styled.div`\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 90%;\n    grid-template-areas: \n        \"header\"\n        \"mid\"\n        \"bottom\"\n    ;\n    grid-auto-rows: minmax(min-content, max-content);\n    gap: 50px;\n    justify-content: center;\n    #title {\n        grid-area: header;\n        display: flex;\n        justify-content: center;\n        & h1 {\n            padding-top: 1em;\n            color: white;\n            font-size: 3em;\n        }\n    }\n    #email-container {\n        font-size: .9em;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n    }\n    #email {\n        margin: 1em 0;\n        padding: 1em;\n        font-size: .8em;\n        border-radius: 5px; \n        border: none;\n    }\n    #cart-container {\n        grid-area: mid;\n        max-height: 100%;\n        min-height: 150px;\n        overflow: scroll;\n        border-radius: 6px;\n        padding: 1em;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        outline-offset: -10px;\n        border: 7px solid #e2b05a;\n        & li {\n            background: none;\n            font-size: 16px;\n            font-weight: 600;\n            margin: .3em 0;\n        }\n        ul {\n            border: none;\n        }\n    }\n\n    #action-container {\n        display: flex;\n        align-items: center;\n        flex-direction: column;\n    }\n    #amount-container {\n        display: flex;\n        align-items: center;\n        margin-bottom: 1.5em;\n        & p {\n            padding-left: 1em;\n            font-size: 1.2em;\n            font-weight: 600;\n        }\n    }\n    #action-button {\n        width: 100%;\n        display: flex;\n        justify-content: space-around;\n    }\n    #action-button button {\n        padding: 1.2em;\n        margin-bottom: 1.5em;\n    }\n    #empty-cart {\n        text-decoration: underline;\n        font-size: .75em;\n    }\n    #no-content {\n        text-align: center;\n        margin: 1em 0;\n        & a {\n            color: white;\n        }\n        p {\n            margin: 1em 0;\n        }\n    }\n`\n\nconst StyledClientCartElement = styled.li`\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    #image-container {\n        width: 80px;\n        background-size: cover;\n        background-repeat: no-repeat;\n        background-position: center;\n    }\n    div {\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding-right: .5em;\n    }\n    .action-buttons {\n        display: flex;\n        justify-content: flex-end;\n    }\n    i {\n        background: transparent;\n        color: blue;\n    }\n`\n\nconst StyledClientProfile = styled.div`\n        height: 92vh;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    #top-container {\n        display: flex;\n        justify-content: center;\n    }\n    h1 {\n        margin: 1em 0;\n        color: white;\n    }\n    #return-button {\n        margin-top: .5em;\n    }\n    #return-container {\n        width: 100%;\n        display: flex;\n        justify-content: center;\n    }\n    #orders-container {\n        width:100vw;\n        display: block;\n        overflow: auto;\n        white-space: nowrap;\n        & div {\n            display: inline-block;\n        }\n    }\n    .field {\n        outline-offset: -10px;\n        border: 7px solid #e2b05a;\n    }\n    .order-element {\n        text-align: center;\n        margin-right: .5em;\n        border-radius: 25px;\n        & h4 {\n            margin: 3em 2.5em;\n        }\n        h2 {\n            margin-top: 1.5em;\n        }\n        button {\n            margin-bottom: 1em;\n        }\n    }\n    #pre-select-container {\n        display: flex;\n        align-items: center;\n        justify-content: space-around;\n        & button {\n            margin: .5em 0;\n            padding: 1em;\n        }\n    }\n    .inside-container {\n        width: 80vw;\n        padding: 1em 0;\n        border-radius: 25px;\n    }\n    form {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        color: white;\n        font-size: 1.5em;\n        font-weight: bold;\n    }\n    input {\n        width: 85%;\n        margin-bottom: 1em;\n        border: none;\n        border-radius: 5px;\n        padding: 0.5em 0 .5em 1em;\n        font-size: 16px;\n        font-style: italic;\n    }\n    .submit {\n        margin-top: 1em;\n        background: transparent;\n        border: 2px solid white;\n        color: white;\n        font-weight: bold;\n    }\n    .have-account {\n        text-align: center;\n        color: white;\n    }\n    .have-account a {\n        color: white;\n    }\n    p {\n        font-size: .5em;\n        margin-top: 1em;\n        text-decoration: underline;\n    }\n`\n\nconst StyledClientDailyMenu = styled.div`\n    min-height: 90vh;\n    #DM-container {\n        margin: 4em 1em;\n        padding: 1em 0;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        outline-offset: -10px;\n        border: 7px solid #e2b05a;\n        border-radius: 25px;\n        & div {\n            text-align: center;\n            margin: 1em 0;\n        }\n    }\n`\n\nexport  {\n    StyledClientHome,\n    StyledClientMenu,\n    StyledClientNav,\n    StyledClientCart,\n    StyledClientProductList,\n    StyledClientProductDetails,\n    StyledClientSingleProduct,\n    StyledClientCartElement,\n    StyledClientProfile,\n    StyledClientDailyMenu\n}","import React from 'react'\nimport Category from '../../client-side/products/Category'\nimport { StyledClientMenu } from '../../styled-components/client-side'\n\nfunction ClientMenu({products, categories}) {\n\n    const renderCategoriesClientSide = products.length ?\n        categories.map(category => (\n            <Category category={category} key={category} />\n        )) :\n        null\n\n    return (\n        <StyledClientMenu>\n            {renderCategoriesClientSide}\n        </StyledClientMenu>\n    )\n}\n\nexport default ClientMenu","import styled from 'styled-components'\n\nconst StyledAdminNav = styled.nav`\n    a {\n        color: white;\n        font-size: 1.2em;\n        font-weight: bold;\n    }\n    i {\n        font-size: 1.8em;\n        cursor: pointer;\n    }\n    .default-nav {\n        width: 100%;\n        background-color: var(--navbar);\n        color: white;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 1.1em 2em;\n    }\n    #button-sidenav {\n        transition: 0.7s;\n        outline: none;\n    }\n    #sidenav {\n        height: 100%;\n        width: 0;\n        position: fixed;\n        z-index: 1;\n        top: 60px;\n        left: 0;\n        background-color: var(--navbar);\n        overflow-x: hidden;\n        transition: 0.5s;\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n        & div {\n            width: 100%;\n            display: flex;\n            justify-content: center;\n        }\n        button {\n            font-size: 16px;\n        }\n    }\n    #sidenav a {\n        padding: 0 1em 1em;\n        padding-right: 1em;\n        text-decoration: none;\n    }\n    .active {\n        color: var(--selected);\n        text-decoration: underline !important;\n    }\n`\n\nconst StyledAdminMenu = styled.div`\n    margin: 0 1.5em;\n    padding-bottom: 1.5em;\n    .field {\n        margin: 1.5em 0;\n        background-color: white;\n        border-radius: 5px;\n    }\n    h1, h2 {\n        text-align: center;\n        margin: .4em 0;\n    }\n    #product-list {\n        max-height: 350px;\n        overflow: scroll;\n    }\n    #categories ul {\n        border: none;\n        & li {\n            padding: 0 .5em;\n            font-size: 24px;\n        }\n    }\n\n    @media (min-width: 768px) {\n        display: grid;\n        grid-template-areas: \n            \"header header\"\n            \"top top\"\n            \"mid mid\"\n            \"bottom bottom\";\n        grid-auto-rows: minmax(min-content, max-content);\n        gap: 12px 12px;\n        #header {\n            grid-area: header;\n        }\n        #categories {\n            grid-area: top | 1 / 1 / 2 / 2;\n        }\n        #add-product {\n            grid-area: top | 1 / 2 / 2 / 3;\n        }\n        #list-title {\n            grid-area: mid;\n        }\n        #product-list {\n            grid-area: bottom;\n            max-height: 32vh ;\n            overflow: scroll;\n        }\n        .field {\n            margin: 0;\n        }\n    }\n`\n\nconst StyledAddProductForm = styled.div`\n    form {\n        display: flex;\n        flex-direction: column;\n        background-color: white;\n        padding: 1em;\n    }\n    label {\n        font-weight: bold;\n        margin-top: .5em;\n    }\n    input {\n        padding: .5em 0;\n    }\n    input, textarea {\n        border: 1.5px solid lightgray;\n        border-radius: 5px;\n        font-weight: bold;\n        padding-left: .8em;\n    }\n    #image {\n        border: none;\n        padding: 0;\n    }\n    \n    #submit {\n        margin-top: 1em;\n    }\n    #cancel-btn {\n        margin-left: 1em;\n    }\n`\nconst StyledAdminProduct = styled.li`\n    list-style: none;\n    padding: .25em 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    .btn-container button {\n        margin-right: .5em;\n    }\n`\n\nconst StyledAdminOrders = styled.div`\n    display: grid;\n    grid-template-areas: \n        \"header\"\n        \"top\"\n        \"mid\"\n        \"bottom\"\n    ;\n    grid-template-rows: minmax(min-content, max-content);\n    padding: 0 1em;\n    h1, h2 {\n        text-align: center;\n    }\n    .field {\n        background-color: white;\n        margin: .8em 0;\n        padding: .8em 0;\n        & h2 {\n            margin-bottom: .4em;\n        }\n        table {\n            width: 100%;\n        }\n        div {\n            max-height: 250px;\n            overflow: scroll;\n        }\n    }\n    table {\n            border-collapse: collapse;\n        }\n    tr {\n        border-bottom: solid transparent .5em;\n        text-align: center;\n        &:nth-child(even) {\n        background-color: lightgray;\n    }\n    }\n    #header {\n        grid-area: header;\n        margin-top: 1em;\n    }\n    @media (min-width: 768px) {\n        display: grid;\n        min-height: 93.8vh;\n        grid-template-areas: \n            \"header header\"\n            \"top top\"\n            \"bottom bottom\"\n            ;\n        grid-auto-rows: minmax(min-content, max-content);\n        gap: 12px 12px;\n        .field div {\n            max-height: 400px;\n        }\n        \n        #header {\n            grid-area: header;\n        }\n        #pending-orders {\n            grid-area: top | 1 / 1 / 2 / 2;\n        }\n        #completed-orders {\n            grid-area: top | 1 / 2 / 2 / 3;\n        }\n        #order-list {\n            grid-area: bottom;\n            max-height: 34vh;\n            overflow: scroll;\n            & tbody td {\n                text-align: center;\n            }\n        }\n    }\n`\n\nconst StyledAdminSingleOrder = styled.div`\n    min-height: 95vh;\n    text-align: center;\n    background-color: lightgray;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    #header {\n        background: none;\n        padding: 1.5em;\n        & h1, i {\n            -webkit-text-stroke: 1px black;\n            text-shadow:\n                3px 3px 0 black,\n                -1px -1px 0 black,  \n                1px -1px 0 black,\n                -1px 1px 0 black,\n                1px 1px 0 black;\n        }\n    }\n    .container {\n        width: 100%;\n    }\n    .list-element {\n        display: flex;\n        justify-content: space-between;\n    }\n    .btn {\n        margin: .2em 0;\n        font-size: 2em;\n    }\n    #ticket {\n        background-color: white;\n        width: 335px;\n        padding: 1em 0;\n        font-family: 'Courier New', Courier, monospace;\n    }\n    #restaurant-logo {\n        margin: .5em 0;\n        & img {\n            width: 50%;\n        }\n    }\n    i {\n        font-size: 3em;\n    }\n    #order-info {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        padding: 0 1em;\n    }\n    #product-list {\n        border: none;\n        min-height: 75px;   \n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: flex-end;\n    & li:nth-child(even) {\n        background-color: white;\n        }\n        li {\n            width: 100%;\n            margin: .5em 0;\n            font-size: 1.2em;\n            font-weight: 500;\n        }\n    }\n    #amount-container {\n        text-align: right;\n    }\n    #action-container {\n        margin: 1em 0;\n        & div {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n        }\n    }\n    @media (min-width: 768px) {\n        justify-content: space-between;\n        #ticket {\n        background-color: white;\n        width: 430px;\n        padding: 2em 0;\n        font-family: 'Courier New', Courier, monospace;\n    }\n    }\n`\n\nconst StyledAdminHome = styled.div`\n    min-height: 92vh;\n    text-align: center;\n    padding-top: 2em;\n    h1 {\n        color: white;\n    }\n    .field {\n        margin: 1em 1.5em;\n    }\n    img {\n        width: 100px;\n        height: 100px;\n        background: none;\n    }\n`\n\nconst StyledAdminConfig = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nconst StyledConfigForm = styled.div`\n    background-color: var(--navbar);\n    border-radius: 10px;\n    margin: 1em;\n    form {\n        padding: .7em;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n    label {\n        text-align: center;\n        color: white;\n        margin-top: .5em;\n        font-size: 24px;\n        font-weight: 600;\n    }\n    input {\n        padding: .8em;\n        margin: .5em;\n        border: none;\n        border-radius: 5px;\n        font-size: 18px;\n    }\n`\n\nconst StyledFlowControl = styled.div`\n    width: 100%;\n    min-height: 92vh;\n    display: flex;\n    flex-direciton: column;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    h2 {\n        color: white;\n        margin: 1em 0;\n    }\n    a {\n        font-size: 24px;\n    }\n`\n\nconst StyledFormDailyMenu = styled.form`\n        padding: .7em;\n        display: flex;\n        flex-direction: column;\n        text-align: center;\n    label {\n        text-align: center;\n        color: white;\n        margin-top: .5em;\n        font-size: 24px;\n        font-weight: 600;\n    }\n    input {\n        padding: .8em;\n        margin: .5em;\n        border: none;\n        border-radius: 5px;\n        font-size: 18px;\n    }\n    div {\n        display: flex;\n        flex-direction: column;\n    }\n    p {\n        color: white;\n    }\n    #price-container, #button-container {\n        align-items: center;\n    }\n\n`\nconst StyledDailyMenu = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    #form-container {\n        margin: 5em;\n        padding: 2.5em;\n        border-radius: 25px;\n        outline-offset: -10px;\n        border: 7px solid #e2b05a;\n    }\n    #button-container {\n        display: flex;\n        justify-content: center;\n        & button {\n            padding: .8em;\n        }\n    }\n`\n\nexport {\n    StyledAdminNav,\n    StyledAdminMenu,\n    StyledAddProductForm,\n    StyledAdminProduct,\n    StyledAdminOrders,\n    StyledAdminSingleOrder,\n    StyledAdminHome,\n    StyledAdminConfig,\n    StyledConfigForm,\n    StyledFlowControl,\n    StyledFormDailyMenu,\n    StyledDailyMenu\n}\n","import React from 'react'\nimport { StyledAddProductForm } from '../../styled-components/admin-side'\nimport productService from '../../../tools/productService'\nimport { toast } from 'react-toastify'\n\nfunction AddProduct({updateList, form, setForm, initialState}) {\n\n    const handleChange = ({target}) => {\n        setForm({\n            ...form,\n            [target.name]: target.value\n        })\n    }\n\n    const handleImageUrl = ({target}) => {\n        toast.info('Cargando imagen, por favor espere la confirmación.', { autoClose: 1500 })\n        const imageToUpload = new FormData()\n        imageToUpload.append('image', target.files[0])\n        productService.upload(imageToUpload)\n            .then(res => {\n                setForm({\n                    ...form,\n                    [target.name]: res\n                })\n                toast.success('Imagen Cargada', { autoClose: 1500 })\n            })\n            .catch(() => toast.error('Error al cargar la imagen.', {autoClose: 1500}))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        productService.addProduct({...form})\n            .then(() => {\n                updateList()\n                setForm(initialState)\n                toast.success(\"Producto guardado con éxito.\", {autoClose: 1500})\n            })\n            .catch(() => \n                toast.error(\n                    \"Error al guardar el producto.\", \n                    {autoClose: 1500}\n                ))\n    }\n\n    const { name, description, category, price, ingredients } = form \n\n    return (\n        <StyledAddProductForm>\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"name\">Nombre</label>\n                <input \n                    type=\"text\" \n                    name=\"name\" \n                    value={name} \n                    onChange={handleChange}\n                />\n                <label htmlFor=\"description\">Descripción</label>\n                <textarea name=\"description\" value={description} cols=\"30\" rows=\"4\" onChange={handleChange}></textarea>\n                <label htmlFor=\"ingredients\">Ingredientes</label>\n                <p \n                    className=\"disabled\"\n                    >\n                    Separa los ingredientes con una coma \",\"\n                </p>\n                <input \n                    type=\"text\"\n                    name=\"ingredients\"\n                    value={ingredients}\n                    onChange={handleChange}\n                />\n                <label htmlFor=\"category\">Categoría</label>\n                <input \n                    type=\"text\" \n                    name=\"category\" \n                    value={category}\n                    onChange={handleChange}\n                />\n                <label htmlFor=\"price\">Precio</label>\n                <input type=\"number\" min=\"0\" step=\"0.01\" name=\"price\" value={price} onChange={handleChange}/>\n                <label htmlFor=\"image\">Imagen</label>\n                <input \n                    type=\"file\" \n                    name=\"image\" \n                    id=\"image\"\n                    onChange={handleImageUrl}/>\n                <input \n                    type=\"submit\" \n                    value=\"GUARDAR PRODUCTO\" \n                    className=\"btn btn-blue\"\n                    id=\"submit\"\n                />\n            </form>\n        </StyledAddProductForm>\n    )\n}\n\nexport default AddProduct\n","import styled from 'styled-components'\n\nconst StyledLoginSignup = styled.div`\n            height: 92vh;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n        .inside-container {\n            width: 80vw;\n            padding: 2em 0;\n            background-color: var(--navbar);\n            border-radius: 25px;\n        }\n        form {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            color: white;\n            font-size: 1.5em;\n            font-weight: bold;\n        }\n        input {\n            width: 85%;\n            margin-bottom: 1em;\n            border: none;\n            border-radius: 5px;\n            padding: .5em;\n        }\n        .submit {\n            margin-top: 1em;\n            background: transparent;\n            border: 2px solid white;\n            color: white;\n            font-weight: bold;\n        }\n        .have-account {\n            text-align: center;\n            color: white;\n        }\n        .have-account a {\n            color: white;\n        }\n    `\n\nconst StyledGenericList = styled.ul `\n    width: 100%;\n    border-radius: 5px;\n    border: 2px solid lightgray;\n    list-style: none;\n    li:nth-child(even) {\n        background-color: lightgray;\n    }\n`\n\nconst StyledNoMatch = styled.div`\n    height: 100vh;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    h2, h3 {\n        color: white;\n    }\n    button {\n        margin-top: 2em;\n        padding: 1.3em .8em;\n        text-decoration: none;\n        font-weight: 600;\n    }\n`\n\nconst StyledLoadingPage = styled.div`\n    position: absolute;\n    background-color: white;\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    img {\n        width: 100%\n    }\n`\n\n\n\nexport {\n    StyledLoginSignup,\n    StyledGenericList,\n    StyledNoMatch,\n    StyledLoadingPage\n}","import React from 'react'\nimport { StyledGenericList } from '../styled-components/common-side'\n\nfunction GenericTable({content, id}) {\n\n    return (\n        <StyledGenericList id={id}>\n            {content}\n        </StyledGenericList>\n    )\n}\n\nexport default GenericTable","import React from 'react'\nimport GenericTable from '../../common/GenericTable'\n\nfunction CategoryList({categories}) {\n\n    const categoryNames = categories.map(category => (\n        <li key={category}>{category}</li>\n    ))\n\n    return (\n        <GenericTable content={categoryNames}/>\n    )\n}\n\nexport default CategoryList","import React from 'react'\nimport GenericTable from '../../common/GenericTable'\nimport { StyledAdminProduct } from '../../styled-components/admin-side'\nimport { useHistory } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nfunction AdminProduct({products, dispatch, productService, setEditForm, goEdit}) {\n    const history = useHistory()\n    const editProduct = (productToEdit) => {\n        goEdit(true)\n        setEditForm(productToEdit)\n        toast.info(\"Editando Producto.\", {autoClose: 1500})\n    }\n\n    const deleteProduct = (id, cb = dispatch) => {\n        productService.deleteProduct(id, cb)\n        toast.error('Producto eliminado.', {autoClose: 1500})\n    }\n    \n\n    const redirectToDetails = (productId) => history.push(`/menu/product/${productId}`)\n\n    const productList = products.map(product => \n        <StyledAdminProduct key={product._id} className=\"container\">\n            <h4>{product.name}</h4>\n            <div className=\"btn-container\">\n                <button\n                    id=\"show-button\"\n                    className=\"btn btn-blue\"\n                    onClick={() => redirectToDetails(product._id)}\n                >\n                    Ver\n                </button>\n                <button\n                    id=\"edit-button\"\n                    className=\"btn btn-blue\"\n                    onClick={() => {\n                    editProduct(product)\n                    }}\n                >Editar\n                    </button>\n                <button\n                    id=\"delete-button\"\n                    className=\"btn btn-red\"\n                    onClick={() => deleteProduct(product._id)}\n                >Borrar</button>\n            </div>\n        </StyledAdminProduct>\n    )\n\n\n    return (\n        <GenericTable content={productList} id=\"admin-product-list-container\"/>\n    )\n}\n\nexport default AdminProduct","import React from 'react'\nimport { StyledAddProductForm } from '../../styled-components/admin-side'\nimport productService from '../../../tools/productService'\nimport { toast } from 'react-toastify'\n\nfunction EditProduct({updateList, setForm, form, initialState, setIsEditing}) {\n\n    const handleChange = ({ target }) => {\n        setForm({\n            ...form,\n            [target.name]: target.value\n        })\n    }\n\n    const handleImageUrl = async ({ target }) => {\n        toast.info('Cargando imagen, por favor espere la confirmación.', {autoClose: 1500})\n\n        const imageToUpload = new FormData()\n        imageToUpload.append('image', target.files[0])\n        productService.upload(imageToUpload)\n            .then(res => {\n                setForm({\n                    ...form,\n                    [target.name]: res\n                })\n                toast.success('Imagen Cargada', { autoClose: 1500 })\n            })\n            .catch(() => toast.error('Error al cargar la imagen.', { autoClose: 1500 }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        productService.editProduct({...form }).then(() => {\n            updateList()\n            setForm(initialState)\n            cancelEdit()\n            toast.success('Producto actualizado con exito', {autoClose: 1500})\n        }).catch(() => toast.error('Error al editar el producto.', {autoClose: 1500}))\n        \n    }\n\n    const cancelEdit = () => {\n        setIsEditing(false)\n        setForm(initialState)\n    }\n\n    const { name, description, category, price, ingredients } = form\n\n    return (\n        <StyledAddProductForm>\n            <form onSubmit={handleSubmit} id=\"edit-form\">\n                <label htmlFor=\"name\">Nombre</label>\n                <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n                <label htmlFor=\"description\">Descripción</label>\n                <textarea name=\"description\" value={description} cols=\"30\" rows=\"5\" onChange={handleChange}></textarea>\n                <label htmlFor=\"ingredients\">Ingredientes</label>\n                <p className=\"disabled\">\n                    Separa los ingredientes con una coma \",\"\n                </p>\n                <input\n                    type=\"text\"\n                    name=\"ingredients\"\n                    value={ingredients}\n                    onChange={handleChange}\n                />\n                <label htmlFor=\"category\">Categoría</label>\n                <input \n                    type=\"text\" \n                    name=\"category\" \n                    value={category} \n                    onChange={handleChange} \n                    />\n                <label htmlFor=\"price\">Precio</label>\n                <input type=\"number\" min=\"0\" step=\"0.01\" name=\"price\" value={price} onChange={handleChange} />\n                <label htmlFor=\"image\">Imagen</label>\n                <input\n                    type=\"file\"\n                    name=\"image\"\n                    id=\"image\"\n                    onChange={handleImageUrl} />\n                <div className=\"button-container\">\n                    <button\n                        type=\"submit\"\n                        form=\"edit-form\"\n                        className=\"btn btn-blue\"\n                        id=\"submit\"\n                        >\n                        EDITAR PRODUCTO\n                    </button>\n                    <button \n                        id=\"cancel-btn\"\n                        className=\"btn btn-red\"\n                        onClick={cancelEdit}\n                    >\n                        Cancelar\n                    </button>\n                </div>\n            </form>\n            \n        </StyledAddProductForm>\n    )\n}\n\nexport default EditProduct","import React, { useState} from 'react'\nimport { StyledAdminMenu } from '../../styled-components/admin-side'\nimport AddProduct from './AddProduct'\nimport CategoryList from './CategoryList'\nimport AdminProduct from './AdminProduct'\nimport EditProduct from './EditProduct'\nimport productService from '../../../tools/productService'\n\nfunction AdminMenu({cb, uniqueCategories, products, dispatch}) {\n    const addForminitialState = {\n        name: '',\n        description: '',\n        category: '',\n        ingredients: '',\n        price: 0,\n        image: undefined,\n    }\n\n    const editFormInitialState = {\n        _id: '',\n        name: '',\n        description: '',\n        category: '',\n        ingredients: '',\n        price: 0,\n        image: undefined,\n    }\n\n    const [addForm, setAddForm] = useState(addForminitialState)\n    const [editForm, setEditForm] = useState(editFormInitialState)\n    const [isEditing, setIsEditing] = useState(false)\n\n\n    const actionForm = !isEditing ?\n        <AddProduct\n            updateList={() => cb(dispatch, true)}\n            setForm={setAddForm}\n            form={addForm}\n            initialState={addForminitialState}\n            categoryList={uniqueCategories}\n        /> :\n        <EditProduct\n            updateList={() => cb(dispatch, true)}\n            setForm={setEditForm}\n            form={editForm}\n            initialState={editFormInitialState}\n            setIsEditing={setIsEditing}\n        />\n\n\n    return (\n        <StyledAdminMenu>\n            <div id=\"header\">\n                <h1 className=\"super-text\">La carta</h1>\n            </div>\n            <div className=\"field\" id=\"categories\">\n                <h2>Categorías</h2>\n                <CategoryList categories={uniqueCategories} />\n            </div>\n            <div id=\"add-product\" className=\"field\">\n                {actionForm}\n            </div>\n            <h2 id=\"list-title\">Listado de Productos</h2>\n            <div className=\"field\" id=\"product-list\">\n                <AdminProduct\n                    products={products}\n                    dispatch={dispatch}\n                    productService={productService}\n                    setEditForm={setEditForm}\n                    goEdit={setIsEditing}\n                />\n            </div>\n        </StyledAdminMenu>\n    )\n}\n\nexport default AdminMenu\n","import React, { useEffect} from 'react'\nimport { isAdminRoute } from '../../tools/pathFunctions'\nimport { useSelector, useDispatch } from 'react-redux'\nimport productService from '../../tools/productService'\nimport ClientMenu from '../client-side/menu/ClientMenu'\nimport AdminMenu from '../admin-side/menu/AdminMenu'\n\nfunction Menu(props) {\n    const products = useSelector(state => state.products)\n    const dispatch = useDispatch()\n\n    const sendDataToRedux = data => dispatch({\n        type: 'SET_PRODUCTS',\n        payload: data\n    })\n    const getProductsAndDispatch = (cb = sendDataToRedux, forceUpdate = false) => {\n        if (!products.length) productService.getAllProducts(cb)\n        if (forceUpdate) productService.getAllProducts(cb)\n        return\n    }\n    \n    useEffect(getProductsAndDispatch, [])\n\n    const uniqueCategories = [...new Set(products.map(e => e.category))]\n\n    if (isAdminRoute(props.match.path)) {\n        return (\n            <AdminMenu \n                cb={getProductsAndDispatch} \n                uniqueCategories={uniqueCategories} \n                products={products} \n                dispatch={sendDataToRedux}\n            />\n        )    \n    }\n\n    return (\n        <ClientMenu \n            products={products} \n            categories={uniqueCategories}\n        />\n    )\n}\n\nexport default Menu\n","import axios from 'axios'\n\nclass UserAuth {\n    constructor() {\n        this.URL = `${process.env.REACT_APP_API_URL}`\n    }\n\n    async login(body, cb) {\n        const {data} = await axios.post(this.URL + '/login', body)\n        this.toLocalStorage(data)\n        cb(data)\n        return data.adminPermissions\n    }\n\n    toLocalStorage(data) {\n        localStorage.setItem('currentUser', JSON.stringify(data))\n    }\n\n    logout() {\n        localStorage.removeItem('currentUser')\n    }\n\n    async signup(data, isAdminRoute) {\n        const body = {\n            ...data,\n            isAdmin: isAdminRoute\n        }\n        try {\n            const { data } = await axios.post(this.URL + \"/signup\", body)\n            this.toLocalStorage(data)\n        } catch (err) {\n            console.error('Error al hacer signup.', err)\n        }\n    }\n\n    async updateUser(userData, cb) {\n        axios.post(`${this.URL}/updateuser`, userData)\n            .then(res => {\n                cb(res.data)\n                this.toLocalStorage(res.data)\n            })\n            .catch(err => \n                console.error('Error al actualizar el usuario.', err)\n            )\n    }\n\n    \n}\n\nexport default new UserAuth()","import React, { useState } from 'react'\nimport userAuth from '../../tools/userAuth'\nimport { useDispatch } from 'react-redux'\nimport { useHistory, Link } from 'react-router-dom'\nimport  { StyledLoginSignup } from '../styled-components/common-side'\n\nfunction Login() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const initialState = {\n        email: '',\n        password: ''\n    }\n\n    const [loginForm, setLoginForm] = useState(initialState);\n\n    const handleChange = ({target}) => {\n        setLoginForm({\n            ...loginForm,\n            [target.name]: target.value\n        })\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        const authCB = data => dispatch({\n            type: 'LOG_USER',\n            payload: data\n        })\n        const hasAdminPermissions = await userAuth.login(loginForm, authCB)\n\n        hasAdminPermissions ? history.push('/admin') : history.push('/menu')\n    }\n    \n    const {email, password} = loginForm\n\n    return (\n        <StyledLoginSignup>\n            <div className=\"inside-container blackboard-bg\">\n                <form onSubmit={handleSubmit}>\n                    <label htmlFor=\"email\">Email</label>\n                    <input \n                        type=\"email\" \n                        name=\"email\"\n                        placeholder=\"ejemplo@ejemplo.com\"\n                        value={email} \n                        onChange={handleChange} />\n                    <label htmlFor=\"password\">Contraseña</label>\n                    <input \n                        type=\"password\" \n                        name=\"password\" \n                        value={password} \n                        onChange={handleChange}/>\n                    <input className=\"submit\" type=\"submit\" value=\"INICIAR SESIÓN\"/>\n                </form>\n                <div className=\"have-account\">\n                        <p>No tienes cuenta?\n                        <Link to=\"/signup\"> Haz click aquí</Link>\n                        </p>\n                </div>\n            </div>  \n        </StyledLoginSignup>\n    )\n}\n\nexport default Login","import React, { useState } from 'react'\nimport { isAdminRoute } from '../../tools/pathFunctions'\nimport userAuth from '../../tools/userAuth'\nimport { Link, useHistory } from 'react-router-dom'\nimport { StyledLoginSignup } from '../styled-components/common-side'\n\nfunction Signup({match}) {\n    const { path } = match\n    const history = useHistory()\n    const initialState = {\n        email: '',\n        password: '',\n        rootPassword: ''\n    }\n\n    const [form, setForm] = useState(initialState)\n\n    const handleChange = ({target}) => {\n        setForm({\n            ...form,\n            [target.name]: target.value\n        })\n    }\n\n    const handleSubmit = async (e, data = form) => {\n        e.preventDefault()\n        await userAuth.signup(data, isAdminRoute(path))\n        history.push('/menu')\n        history.go(0)\n    }\n\n    const {email, password, rootPassword} = form\n\n\n    if (isAdminRoute(path)) {\n        return (\n            <StyledLoginSignup>\n            <div className=\"inside-container blackboard-bg\">\n                <form onSubmit={handleSubmit}>\n                    <label htmlFor=\"email\">Email</label>\n                    <input \n                        type=\"email\" \n                        name=\"email\"\n                        placeholder=\"ejemplo@ejemplo.com\"\n                        onChange={handleChange} \n                        value={email}\n                    />\n                    <label htmlFor=\"password\">Contraseña</label>\n                    <input \n                        type=\"password\" \n                        name=\"password\" \n                        onChange={handleChange} \n                        value={password}\n                    />\n                    <label htmlFor=\"rootPassword\">Contraseña Root</label>\n                    <input \n                        type=\"password\" \n                        name=\"rootPassword\" \n                        onChange={handleChange} \n                        value={rootPassword}\n                    />\n                    <input \n                        type=\"submit\" \n                        value=\"CREAR CUENTA ADMINISTRADOR\"\n                        className=\"submit\"    \n                    />\n                </form>\n                <div className=\"have-account\">\n                    <p>Ya tienes una cuenta?\n                    <Link to=\"/login\"> Haz click aquí</Link>\n                    </p>\n                </div>\n            </div>\n            </StyledLoginSignup>\n        )\n    }\n\n    return (\n        <StyledLoginSignup>\n            <div className=\"inside-container blackboard-bg\">\n                <form onSubmit={(e) => handleSubmit(e, {email: form.email, password: form.password})}>\n                    <label htmlFor=\"email\">Email</label>\n                    <input \n                        type=\"email\" \n                        name=\"email\" \n                        placeholder=\"ejemplo@ejemplo.com\"\n                        onChange={handleChange} \n                        value={email}\n                    />\n                    <label htmlFor=\"password\">Contraseña</label>\n                    <input \n                        type=\"password\" \n                        name=\"password\" \n                        onChange={handleChange} \n                        value={password}\n                    />\n                    <input \n                        className=\"submit\" \n                        type=\"submit\" \n                        value=\"CREAR CUENTA\" \n                    />\n                </form>\n                <div className=\"have-account\">\n                    <p>Ya tienes una cuenta?\n                        <Link to=\"/login\"> Haz click aquí</Link>\n                    </p>\n                </div>\n            </div>\n        </StyledLoginSignup>\n    )\n}\n\n\nexport default Signup","import React, {useState} from 'react'\nimport { NavLink, useLocation, Link,useHistory } from 'react-router-dom'\nimport { isAdminRoute } from  '../../tools/pathFunctions'\nimport { useSelector } from 'react-redux'\nimport { StyledClientNav } from '../styled-components/client-side'\nimport { StyledAdminNav } from  '../styled-components/admin-side'\nimport userAuth from '../../tools/userAuth'\n\nfunction NavBar() {\n    const {pathname} = useLocation()\n    const history = useHistory()\n    const user = useSelector(state => state.user)\n    const [showSidenav, setShowSidenav] = useState(false)\n\n    const isClientHome = pathname === '/'\n\n    const loginButtonOnNav = (\n        <NavLink to=\"/login\">\n            <div className=\"nav-element\">\n                <i className=\"fas fa-sign-in-alt\"></i>\n                <p>Iniciar Sesión</p>\n            </div>\n        </NavLink>\n    )\n\n    const profileButtonOnNav = (\n        <NavLink to=\"/profile\">\n            <div className=\"nav-element\">\n                <i className=\"fas fa-user\"></i>\n                <p>Mi Cuenta</p>\n            </div>\n        </NavLink>\n    )\n\n    const adminButtonOnNav = (\n        <NavLink to=\"/admin\">\n            <div className=\"nav-element\">\n                <i className=\"fas fa-user\"></i>\n                <p>Zona Administrador</p>\n            </div>\n        </NavLink>\n    )\n\n    const displayLastNavButton = () => {\n        if (user) {\n            if (user.adminPermissions) return adminButtonOnNav\n            return profileButtonOnNav\n        }\n        return loginButtonOnNav\n    }\n\n    const openNav = (isOpen = showSidenav) =>  document.getElementById(\"sidenav\").style.width = isOpen ? \"0\" : \"250px\"\n\n    const rotateIcon = () => {\n        setShowSidenav(state => !state)\n        const action = (degrees) => document.getElementById('button-sidenav').style.transform = `rotate(${degrees}deg)`\n        !showSidenav ? action(90) : action(0)\n        openNav()\n    }\n\n    const logoutAndRedirectToHome = () => {\n        userAuth.logout()\n        history.push('/')\n        history.go(0)\n    }\n\n    if (isAdminRoute(pathname)) {\n        return (\n            <StyledAdminNav >\n                <div className=\"default-nav\">\n                    <i \n                        className=\"fas fa-bars\" \n                        id=\"button-sidenav\"\n                        onClick={rotateIcon}\n                        >\n                    </i>\n                    <Link to=\"/\">Vista Cliente</Link>\n                </div>\n                <div id=\"sidenav\">\n                    <NavLink  exact to=\"/admin\" onClick={rotateIcon}>Home Administrador</NavLink>\n                    <NavLink to=\"/admin/menu\" onClick={rotateIcon}>Carta</NavLink>\n                    <NavLink to=\"/admin/dailymenu\" onClick={rotateIcon}>Menú Diario</NavLink>\n                    <NavLink to=\"/admin/orders\" onClick={rotateIcon}>Pedidos</NavLink>\n                    <NavLink to=\"/admin/config\" onClick={rotateIcon}>Configuración</NavLink>\n                    <div>\n                        <button\n                            className=\"btn btn-red\"\n                            onClick={logoutAndRedirectToHome}>\n                            Cerrar sesión\n                        </button>\n                    </div>\n                </div>\n            </StyledAdminNav>\n        )\n    }\n\n    if (isClientHome) {\n        return null\n    }\n\n    return (\n        <StyledClientNav className=\"blackboard-bg\">\n            <NavLink exact to=\"/\">\n                <div className=\"nav-element\">\n                    <i className=\"fas fa-home\"></i>\n                    <p>Inicio</p>\n                </div>\n            </NavLink>\n            <NavLink to=\"/menu\">\n                <div className=\"nav-element\">\n                    <i className=\"fas fa-book-open\"></i>\n                    <p>Menu</p>\n                </div>\n            </NavLink>\n            <NavLink to=\"/cart\">\n                <div className=\"nav-element\">\n                    <i className=\"fas fa-shopping-cart\"></i>\n                    <p>Carrito</p>\n                </div>\n            </NavLink>\n            {displayLastNavButton()}\n        </StyledClientNav>\n    )\n\n    \n}\n\nexport default NavBar","import React from 'react'\nimport { StyledLoadingPage } from '../styled-components/common-side'\n\nfunction LoadingPage() {\n    return (\n        <StyledLoadingPage>\n            <div>\n                <img src=\"https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif\" alt=\"Loading gif\" />\n            </div>\n        </StyledLoadingPage>\n    )\n}\n\nexport default LoadingPage\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { StyledClientHome } from '../../styled-components/client-side'\nimport { useEffect } from 'react'\nimport LoadingPage from '../../common/LoadingPage'\n\nfunction ClientHome() {\n    const config = useSelector(state => state.config)\n\n    if (config) {\n        const {logo, name} = config\n\n        return (\n            <StyledClientHome>\n                <header >\n                    <div id=\"head-img\">\n                        <div id=\"header-locations\">\n                            <Link to=\"/places\">\n                                <i className=\"fas fa-map-marker-alt\"></i>\n                            LOCALIZACIONES\n                        </Link>\n                        </div>\n                        <div id=\"head-logo\">\n                            <img src={logo} alt={`${name} logo`} />     \n                        </div>\n                        <nav>\n                            <div>\n                                <Link to=\"/menu\">Carta</Link>\n                                <Link to=\"/dailymenu\">Menú Diario</Link>\n                                <Link to=\"/places\">Localizaciones</Link>\n                            </div>\n                            <div>\n                                <Link to=\"/about\">Sobre Nosotros</Link>\n                            </div>\n                        </nav>\n                    </div>\n                </header>\n            </StyledClientHome>\n        )\n    }\n\n    return (\n        <LoadingPage />\n    )\n}\n\nexport default ClientHome","import axios from 'axios'\nimport moment from 'moment'\n\nclass OrdersService {\n    constructor() {\n        this.URL = `${process.env.REACT_APP_API_URL}`\n    }\n\n    async getAllOrders() {\n        const orders = await axios.get(`${this.URL}/getallorders`)\n        return orders.data\n    }\n\n    async getOrdersInProgress() {\n        const orders = await axios.get(`${this.URL}/getordersinprogress`)\n        return orders.data\n    }\n\n    async getIncomingOrders() {\n        const orders = await axios.get(`${this.URL}/getincomingorders`)\n        return orders.data\n    }\n\n    async getSingleOrder(id) {\n        const singleOrder = await axios.get(`${this.URL}/getsingleorder/${id}`)\n        return singleOrder.data\n    }\n\n    startOrder(id) {\n        axios.post(`${this.URL}/startorder/${id}`)\n    }\n\n    finishOrder(id) {\n        axios.post(`${this.URL}/finishorder/${id}`)\n    }\n\n    async mostSelledProducts() {\n        const dataFromDB = await this.getAllOrders()\n        \n        const normalizedData = dataFromDB.flatMap(order => {\n            const product = order.productList.map(({ product, qty }) => {\n                return {\n                    name: product.name,\n                    qty: qty\n                }\n            })\n            return product\n        })\n\n        const getQuantities = (data = normalizedData) => {\n            const dataReduced = []\n            if (data.length) {\n                data.forEach(product => {\n                    if (!dataReduced.find(prod => prod.name === product.name)) {\n                        return dataReduced.push({ name: product.name, qty: product.qty })\n                    }\n                    const existentProduct = dataReduced.find(prod => prod.name === product.name)\n\n                    existentProduct.qty += product.qty\n                })\n            }\n            return dataReduced\n        }\n\n        return getQuantities()\n    }\n\n    async getLast30Days() {\n        const dataFromDB = await this.getAllOrders()\n\n        const ordersFilteredByDate = dataFromDB.filter(order => {\n            const orderDate = moment(order.createdAt)\n            const diff = moment().diff(orderDate, 'days')\n            if (diff <= 30) return order\n            }\n        )\n        const normalizedData = ordersFilteredByDate.map(order => {\n            return {\n                amount: order.amount,\n                date: moment(order.createdAt).format('DD, MMM, YYYY')\n            }\n        }).sort((a,b) => b.date - a.date)\n\n\n        const dataReduced = () => {\n            const ordersArr = []\n            normalizedData.forEach(order => {\n                if (!ordersArr.find(el => el.date === order.date)) {\n                    return ordersArr.push(order)\n                }\n                const existentDate = ordersArr.find(el => el.date === order.date)\n                existentDate.amount += order.amount\n            })\n            return ordersArr\n        }\n        return dataReduced()\n    }\n\n\n}\n\nexport default new OrdersService()","import React, { useState, useEffect, useRef} from 'react'\nimport Chartjs from 'chart.js'\n\nfunction MostSelledChart({data, chartName}) {\n    const chartContainer = useRef(null)\n    const [chartInstance, setChartInstance] = useState(null)\n\n    const getFiveElements = data.filter(el => el.qty > 5).sort((a, b) => b.qty - a.qty)\n\n    const innerColors = [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)'\n    ]\n\n    const borders = [\n        'rgba(255, 99, 132, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)'\n    ]\n\n    const chartConfig = {\n        type: \"bar\",\n        data: {\n            labels: getFiveElements.map(el => el.name),\n            datasets: [\n                {\n                    data: getFiveElements.map(el => el.qty),\n                    backgroundColor: innerColors,\n                    borderColor: borders,\n                    borderWidth: 2\n                },\n        ]\n        },\n        options: {\n            legend: {\n                display: false,\n            },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true\n                    }\n                }]\n            }\n        }\n    }\n\n\n\n    useEffect(() => {\n        if (chartContainer && chartContainer.current ) {\n            const newChartInstance = new Chartjs(chartContainer.current, chartConfig)\n            setChartInstance(newChartInstance)\n        }\n    }, [chartContainer]);\n\n    return (\n        <canvas ref={chartContainer} >\n        </canvas>\n    )\n}\n\nexport default MostSelledChart\n","import React, { useState, useEffect, useRef } from 'react'\nimport Chartjs from 'chart.js'\n\nfunction Last30DaysChart({data}) {\n    const chartContainer = useRef(null)\n    const [chartInstance, setChartInstance] = useState(null)\n\n    const chartConfig = {\n        type: \"line\",\n        data: {\n            labels: data.map(el => el.date),\n            datasets: [\n                {\n                    data: data.map(el => el.amount),\n                    backgroundColor: 'transparent',\n                    borderColor: 'green',\n                    borderWidth: 2\n                },\n            ]\n        },\n        options: {\n            legend: {\n                display: false,\n            },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true\n                    }\n                }]\n            }\n        }\n    }\n\n\n\n    useEffect(() => {\n        if (chartContainer && chartContainer.current) {\n            const newChartInstance = new Chartjs(chartContainer.current, chartConfig)\n            setChartInstance(newChartInstance)\n        }\n    }, [chartContainer]);\n\n    return (\n        <canvas ref={chartContainer} >\n        </canvas>\n    )\n}\n\nexport default Last30DaysChart\n","import React, { useState, useEffect } from 'react'\nimport orderService from '../../../tools/ordersService'\nimport { StyledAdminHome } from '../../styled-components/admin-side'\nimport MostSelledChart from './MostSelledChart'\nimport Last30DaysChart from './Last30DaysChart'\nimport LoadingPage from '../../common/LoadingPage'\n\nfunction AdminHome() {\n    const [mostSelled, setMostSelled] = useState([])\n    const [last30Days, setLast30Days] = useState([])\n\n    useEffect(() => {\n        if (!mostSelled.length && !last30Days.length) {\n            orderService.mostSelledProducts().then(setMostSelled)\n            orderService.getLast30Days().then(setLast30Days)\n        }\n    }, [])\n\n    if (mostSelled.length && last30Days.length) {\n        return (\n            <StyledAdminHome>\n                <h1 className=\"super-text\">Estadísticas</h1>\n                <div className=\"field\">\n                    <h2>Productos más vendidos</h2>\n                    <MostSelledChart data={mostSelled}/>\n                </div>\n                <div className=\"field\">\n                    <h2>Ventas de los últimos 30 días</h2>\n                    <Last30DaysChart data={last30Days} />\n                </div>\n            </StyledAdminHome>\n        )\n    }\n\n    return (\n        <LoadingPage />\n    )\n}\n\nexport default AdminHome\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { isAdminRoute } from '../../tools/pathFunctions'\nimport ClientHome from '../client-side/home/ClientHome'\nimport AdminHome from '../admin-side/home/AdminHome'\n\nfunction Home() {\n    const {pathname} = useLocation()\n    \n\n    if (isAdminRoute(pathname)) {\n        return (\n            <AdminHome />\n        )\n    }\n\n    return (\n        <ClientHome />\n    )\n\n}\n\nexport default Home","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { StyledNoMatch } from '../styled-components/common-side'\nfunction NoMatch() {\n    const history = useHistory()\n    \n    const goHome = () => history.push('/')\n\n    return (\n        <StyledNoMatch>\n            <h2 className=\"super-text\">Ups!</h2>\n            <h2 className=\"super-text\"> Parece que la ruta no existe!</h2>\n            <button \n                className=\"btn btn-blue\"\n                onClick={goHome}\n                >Volver a la página principal</button>\n        </StyledNoMatch>\n    )\n}\n\nexport default NoMatch\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { StyledNoMatch } from '../styled-components/common-side'\nfunction NoMatch() {\n    const history = useHistory()\n\n    const goHome = () => history.push('/')\n\n    return (\n        <StyledNoMatch>\n            <h2 className=\"super-text\">Ups!</h2>\n            <h3 className=\"super-text\"> Esta ruta está en construcción.</h3>\n            <button\n                className=\"btn btn-blue\"\n                onClick={goHome}\n            >Volver a la página principal</button>\n        </StyledNoMatch>\n    )\n}\n\nexport default NoMatch","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nfunction Header({text}) {\n    const history = useHistory()\n    const goBack = () => history.goBack()\n\n    return (\n        <div id=\"header\" className = \"blackboard-bg\">\n            <i className=\"fas fa-arrow-left\" onClick={goBack}></i>\n            <h1>{text}</h1>   \n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport productService from  '../../../tools/productService'\nimport { StyledClientProductDetails } from '../../styled-components/client-side'\nimport { useState, useEffect } from 'react'\nimport Header from '../../common/Header'\n\nfunction ProductDetails({match}) {\n    const {id: currentProductId} = match.params\n    const history = useHistory()\n\n    const useSelectedProduct = (productId = currentProductId) => {\n        const products = useSelector(state => state.products)\n        const productSelected = products.length ? products.find(({ _id }) => _id === productId) : []\n        const [currentProduct, setCurrentProduct] = useState(productSelected)\n        const hasStoredProduct = currentProduct.length\n\n        useEffect(() => {\n            if (!hasStoredProduct) productService.getSingleProduct(currentProductId).then(setCurrentProduct)\n        }, [hasStoredProduct])\n\n        return currentProduct\n    }\n\n    const goBack = () => history.goBack()\n\n    const {name, description, price, ingredients} = useSelectedProduct()\n\n    const displayIngredients = () => {\n        if (ingredients) return ingredients.map(elem => <li key={elem}>{elem}</li>)\n        return null\n    }\n\n\n    return (\n        <StyledClientProductDetails>\n            <Header text={\"Detalles\"}/>\n            <div id=\"product-container\">\n                <div id=\"product-info\" className=\"blackboard-bg\">\n                    <h1>{name}</h1>\n                    <p id=\"description\">{description}</p>\n                    <ul>\n                        {displayIngredients()}\n                    </ul>\n                    <div id=\"action-container\" >\n                        <h2 id=\"price\">{price} €</h2>\n                        <button \n                            className=\"btn btn-blue\"\n                            onClick={goBack}\n                            >Volver</button>\n                    </div>\n                </div>\n            </div>\n        </StyledClientProductDetails>\n    )\n}\n\nexport default ProductDetails","import axios from 'axios'\nimport { toast } from 'react-toastify'\n\nclass CartService {\n    constructor() {\n        this.URL = `${process.env.REACT_APP_API_URL}`\n        this.localStoragePath = 'currentCart'\n    }\n\n    toLocalStorage(product) {\n        const hasCurrentCart = localStorage.currentCart\n        if (!hasCurrentCart) return localStorage.setItem(this.localStoragePath, JSON.stringify([{product: product, qty: 1}]))\n\n        const productList = JSON.parse(localStorage.currentCart)\n        const existentProduct = productList.find(e => e.product._id === product._id)\n\n        if (existentProduct) {\n            productList.map(e => {\n                if (e.product._id === product._id) {\n                    ++e.qty\n                }\n                return e\n            })\n            localStorage.setItem(this.localStoragePath, JSON.stringify([...productList]))     \n            return\n        }\n\n        localStorage.setItem(this.localStoragePath, JSON.stringify([...productList, { product: product, qty: 1 }]))    \n    }\n\n    removeCartFromLocalStorage() {\n        localStorage.removeItem(this.localStoragePath)\n    }\n\n    removeElementFromCart(productIndex) {\n        const productListUpdated = JSON.parse(localStorage.currentCart).filter((elem, idx) => idx !== productIndex)\n        localStorage.setItem(this.localStoragePath, JSON.stringify([...productListUpdated]))\n    }\n\n    addOrderToLocalStorage(order) {\n        const hasCurrentUser = JSON.parse(localStorage.currentUser)\n        if (!hasCurrentUser) return\n        const updatedUser = {...hasCurrentUser, orders: [...hasCurrentUser.orders, order]}\n\n        localStorage.setItem('currentUser', JSON.stringify(updatedUser))\n    }\n\n\n    async sendCart(cart, clientId, totalAmount, email) {\n        const body = {\n            client: clientId || null,\n            products: cart,\n            amount: totalAmount,\n            email: email || null\n        }\n        const response = await axios.post(`${this.URL}/generateorder`, body)\n        this.removeCartFromLocalStorage()\n        switch (response.status) {\n            case 200:\n                toast.success(\n                    'Pedido realizado con éxito.',\n                    {autoClose: 2000}\n                    )\n                return response.data\n            default:\n                toast.error(\n                    'Error al realizar el pedido',\n                    {autoClose: 1500}\n                    )\n                break;\n        }\n    }\n}\n\nexport default new CartService()","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport cartService from '../../../tools/cartService'\nimport { toast } from 'react-toastify'\n\nfunction ClientProduct({product}) {\n    const dispatch = useDispatch()\n    const currentCart = useSelector(state => state.cart)\n\n    const { image, name, _id, price } = product\n\n    const addToCart = (product) => {\n        cartService.toLocalStorage(product)\n        dispatch({\n            type: 'ADD_PRODUCT',\n            payload: product\n        })\n    }\n\n    const increaseQty = (product) => {\n        cartService.toLocalStorage(product)\n        dispatch({\n            type: 'QTY_UP',\n            payload: product\n        })\n    }\n\n    const cartAction = (prod) => {\n        currentCart.find(e => e.product._id === prod._id) ? increaseQty(prod) : addToCart(prod)\n        toast.info(`Has añadido ${prod.name} al carrito.`, {autoClose: 1500})\n    }\n    \n    return (\n        <div className=\"food-container border blackboard-bg\">\n            <div className=\"food-image\" style={{ backgroundImage: `url(${image})` }}>\n                <h2 className=\"super-text\">{name}</h2>\n            </div>\n            <div className=\"text-container blackboard-bg\">\n                <p>{price}€</p>\n                <div >\n                    <Link \n                        to={`/menu/product/${_id}`}\n                        >Ingredientes</Link>\n                    <button\n                        className=\"btn btn-blue\"\n                        onClick={() => cartAction(product)}\n                    >\n                        Añadir al carrito\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ClientProduct","import React, {useState, useEffect} from 'react'\nimport ClientProduct from './ClientProduct'\nimport { useSelector } from 'react-redux'\nimport { StyledClientProductList } from '../../styled-components/client-side'\nimport productService from '../../../tools/productService'\nimport Header from '../../common/Header'\n\nfunction ProductList({match}) {\n    const {category: currentCategory} = match.params\n\n    const useSelectedProductList = (category = currentCategory) => {\n        const storedProducts = useSelector(state => state.products.filter(({ cat }) => cat === category))\n        const [currentProducts, setCurrentProducts] = useState(storedProducts)\n        const hasStoredProducts = storedProducts.length\n\n        useEffect(() => {\n            if (!hasStoredProducts) productService.getCategory(currentCategory).then(setCurrentProducts)\n        }, [hasStoredProducts])\n        return currentProducts\n    }\n\n    const currentProducts = useSelectedProductList(currentCategory)\n\n    const renderProducts = currentProducts.map(product => <ClientProduct product={product} key={product._id} />)\n\n    return (\n        <StyledClientProductList>\n            <Header text={currentCategory}/>\n            <div id=\"main-content\">\n                {renderProducts}\n            </div>\n        </StyledClientProductList>\n    )\n}\n\nexport default ProductList","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport userAuth from '../../../tools/userAuth'\nimport { toast } from 'react-toastify'\n\nfunction ProfileForm({user, cb}) {\n    const initialState = {\n        _id: '',\n        name: '',\n        email: '',\n        city: '',\n        street: '',\n        number: '',\n        door: ''\n    }\n\n\n    const [formData, setFormData] = useState(user)\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const handleChange = ({ target }) => {\n        setFormData({\n            ...formData,\n            [target.name]: target.value\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const authCB = data => dispatch({\n            type: 'LOG_USER',\n            payload: data\n        })\n        userAuth.updateUser(formData, authCB)\n        toast.success('Perfil actualizado con éxito', {autoClose: 1500})\n        history.push('/menu')\n    }\n\n    const logoutAndRedirectToHome = () => {\n        userAuth.logout()\n        history.push('/')\n        history.go(0)\n    }\n\n    const { name, email, city, street, number, door } = formData\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label htmlFor=\"name\">Nombre</label>\n            <input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Escribe tu nombre...\"\n                value={name}\n                onChange={handleChange}\n            />\n            <label htmlFor=\"email\">Email</label>\n            <input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Escribe tu email...\"\n                value={email}\n                onChange={handleChange}\n            />\n            <label htmlFor=\"city\">Ciudad</label>\n            <input\n                type=\"text\"\n                name=\"city\"\n                value={city}\n                placeholder=\"Escribe tu ciudad...\"\n                onChange={handleChange}\n            />\n            <label htmlFor=\"street\">Calle</label>\n            <input\n                type=\"text\"\n                name=\"street\"\n                placeholder=\"Escribe tu calle...\"\n                value={street}\n                onChange={handleChange}\n            />\n            <label htmlFor=\"number\">Numero</label>\n            <input\n                type=\"number\"\n                name=\"number\"\n                value={number}\n                placeholder=\"Escribe el número de tu vivienda...\"\n                onChange={handleChange}\n            />\n            <label htmlFor=\"door\">Puerta</label>\n            <input\n                type=\"text\"\n                name=\"door\"\n                placeholder=\"Escribe tu puerta...\"\n                value={door}\n                onChange={handleChange}\n            />\n            <input\n                type=\"submit\"\n                value=\"GUARDAR PERFIL\"\n                className=\"btn btn-blue\"\n            />\n            <button \n                id=\"return-button\"\n                className=\"btn btn-red\"\n                onClick={() => cb(false)}\n                >\n                Volver\n            </button>\n            <p\n                onClick={logoutAndRedirectToHome}>\n                Cerrar sesión\n            </p>\n        </form>\n    )\n}\n\nexport default ProfileForm\n","class DateService{\n    getDate(timestamp) {\n        return new Date(timestamp).toLocaleDateString()\n    }\n\n    getTime(timestamp) {\n        return new Date(timestamp).toLocaleTimeString()\n    }\n}\n\nexport default new DateService()","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport dateService from '../../../tools/dateService'\n\nfunction CurrentOrders({orders}) {\n    const history = useHistory()\n    const redirectToOrderDetails = (id) => history.push(`/order/${id}`)\n\n    const displayOrders = orders.map(order => (\n        <div className=\"order-element blackboard-bg field\" key={order.easyId}>\n            <h2>Pedido {order.easyId}</h2>\n            <h4>Fecha: {dateService.getDate(order.createdAt)}</h4>\n            <h4>Importe: {order.amount}€</h4>\n            <button \n                onClick={() => redirectToOrderDetails(order._id)}\n                className=\"btn btn-blue\"\n                >Ver detalles\n            </button>\n        </div>\n    )).reverse()\n\n    return (\n        <div id=\"orders-container\">\n            {displayOrders}\n        </div>\n    )\n}\n\nexport default CurrentOrders\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { StyledClientProfile } from '../../styled-components/client-side'\nimport ProfileForm from './ProfileForm'\nimport CurrentOrders from './CurrentOrders'\nimport { useState } from 'react'\n\nfunction Profile() {\n    const user = useSelector(state => state.user)\n    const [displayForm, setDisplayForm] = useState(false)\n    const [displayOrders, setDisplayOrders] = useState(false)\n\n    const selectedField = () => {\n        if (displayForm) {\n            return (\n                <div \n                    id=\"form-container\"\n                    className=\"inside-container blackboard-bg field\">\n                    <ProfileForm user={user} cb={setDisplayForm} />\n                </div>\n            )\n        }\n            \n        if (displayOrders) {\n            return (\n                <div>\n                    <div\n                        id=\"orders-container\"\n                        className=\"inside-container field\">\n                        <CurrentOrders orders={user.orders} />\n                    </div>\n                    <div\n                        id=\"return-container\">\n                        <button\n                            id=\"return-button\"\n                            className=\"btn btn-red\"\n                            onClick={() => setDisplayOrders(false)}>\n                            Volver\n                        </button>\n                    </div>\n                </div>\n                \n            )\n        }\n\n        return (\n            <div>\n                <div id=\"top-container\">\n                    <div\n                        id=\"pre-select-container\"\n                        className=\"inside-container blackboard-bg\">\n                        <button\n                            className=\"btn btn-blue\"\n                            onClick={() => setDisplayForm(true)}\n                            >Mostrar mi perfil\n                        </button>\n                    </div>\n                </div>\n                <div\n                    id=\"orders-container\"\n                    className=\"inside-container\">\n                    <CurrentOrders orders={user.orders} />\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <StyledClientProfile>\n            <h1 className=\"title super-text\">Mi cuenta</h1>            \n            {selectedField()}\n        </StyledClientProfile>\n    )\n}\n\nexport default Profile","import React, {useState, useEffect} from 'react'\nimport { StyledClientCartElement } from '../../styled-components/client-side'\nimport { useSelector } from 'react-redux'\nimport productService from '../../../tools/productService'\n\nfunction CartElement({element, qty, removeElement}) {\n  \n    const useCurrentCartElement = (productId = element._id) => {\n      const products = useSelector(state => state.products)\n      const productToShow = products.length ? products.find(({_id}) => (\n        _id === productId\n      )) : []\n      const [currentProduct, setCurrentProduct] = useState(productToShow)\n      const hasStoredProduct = productToShow.length\n\n      useEffect(() => {\n        if (!hasStoredProduct) productService.getSingleProduct(element._id).then(setCurrentProduct)\n      }, [hasStoredProduct])\n\n      return currentProduct\n    }\n    \n    const {name, price} = useCurrentCartElement()\n  \n    return (\n      <StyledClientCartElement>\n        <div>\n          <p>{name}</p>\n          <p>{qty} x {price} €</p>\n        </div>\n          <button \n            onClick={() => removeElement(element)}\n            className=\"btn btn-red\"\n            >\n            X\n          </button>\n      </StyledClientCartElement>\n    )\n}\n\nexport default CartElement","import React, {useState, useEffect} from 'react'\nimport GenericTable from '../../common/GenericTable'\nimport CartElement from './CartElement'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { StyledClientCart } from '../../styled-components/client-side'\nimport cartService from '../../../tools/cartService'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nfunction Cart() { \n    const currentCart = useSelector(state => state.cart)\n    const user = useSelector(state => state.user)\n    const [clientEmail, setClientEmail] = useState('')\n    const [totalAmount, setTotalAmount] = useState(0)\n    const dispatch = useDispatch()\n\n\n    function getTotalAmount() {\n        if (!currentCart.length) return 0\n        const amount = currentCart\n                            .flatMap(prod => prod.product.price * prod.qty)\n                            .reduce((acc, elem) => acc + elem)\n        return amount\n    }\n\n    function emptyCart() {\n        cartService.removeCartFromLocalStorage()\n        dispatch({\n            type: 'EMPTY_CART'\n        })\n    }\n\n    function removeProductFromCart(idx) {\n        dispatch({\n            type: 'REMOVE_PRODUCT',\n            payload: idx\n        })\n    }\n\n    function addOrderToUser(data) {\n        cartService.addOrderToLocalStorage(data)\n        dispatch({\n            type: 'ADD_ORDER',\n            payload: data\n        })\n    }\n    \n    const sendOrder = async (cart, id) => {\n        if (!user) {\n            await cartService.sendCart(cart, id, totalAmount, clientEmail)\n            return emptyCart()\n        }\n        if (cart.length) {\n            const newOrder = await cartService.sendCart(cart, id, totalAmount)\n            \n            addOrderToUser(newOrder)\n            return emptyCart()\n        }\n        \n        return toast.error('No tienes productos en el carrito.', {autoClose: 1500})\n    }\n\n    useEffect(() => {\n        setTotalAmount(getTotalAmount)\n    }, [sendOrder])\n\n\n    const removeElement = productToRemove => {\n        const productIndex = currentCart.findIndex(elem => elem.product === productToRemove)\n        removeProductFromCart(productIndex)\n        cartService.removeElementFromCart(productIndex)\n    }\n\n    const renderCartElement = currentCart.map(e => (\n        <CartElement element={e.product} qty={e.qty} key={e.product._id} removeElement={removeElement}/>\n        ))\n        \n\n    const userEmail = () => {\n        if (!user) {\n            return (\n                <div id=\"email-container\">\n                    <label htmlFor=\"email\">Escribe tu email para recibir el ticket</label>\n                    <input\n                        id=\"email\"\n                        type=\"email\"\n                        placeholder=\"example@example.com\"\n                        value={clientEmail}\n                        onChange={({ target }) => setClientEmail(target.value)}\n                    />\n                </div>\n            )\n        }\n        return null\n    }\n\n\n    const hasCartContent = currentCart.length ? (\n        <>\n        <GenericTable content={renderCartElement} />\n        <div id=\"action-container\">\n            <div id=\"amount-container\">\n                <h2>Total</h2>\n                <p>{totalAmount} €</p>\n            </div>\n                {userEmail()}\n            <div id=\"action-button\">\n                <button\n                    className=\"btn btn-blue\"\n                    onClick={() => sendOrder(currentCart, user ? user._id : null)}\n                >REALIZAR PEDIDO\n                </button>\n            </div>\n            <p\n                id=\"empty-cart\"\n                onClick={emptyCart}\n            >\n                Vaciar carrito\n            </p>\n        </div>\n        </>\n        ) : \n        (\n            <div id=\"no-content\">\n                <p>No tienes ningun producto en tu carrito</p>\n                <Link to=\"/menu\">\n                    Vamos a ver la carta!\n                </Link>\n            </div>\n        )\n\n    \n\n    return (\n        <StyledClientCart>\n            <div id=\"title\" className=\"super-text\">\n                <h1>Tu pedido</h1>\n            </div>\n            <div id=\"cart-container\" className=\"blackboard-bg\">\n                {hasCartContent}\n            </div>\n        </StyledClientCart>\n    )\n}\n\n\nexport default Cart\n","import React, { useState, useEffect} from 'react'\nimport { useSelector } from 'react-redux'\nimport { StyledAdminSingleOrder } from '../../styled-components/admin-side'\nimport GenericTable from '../../common/GenericTable'\nimport Header from '../../common/Header'\nimport ordersService from '../../../tools/ordersService'\nimport dateService from '../../../tools/dateService'\nimport LoadingPage from '../../common/LoadingPage'\n\nfunction OrderDetails({match}) {\n    const { params: { id } } = match\n    const [orderData, setOrderData] = useState(null)\n    const config = useSelector(state => state.config)\n    \n    const getOrderData = (orderId = id) => {ordersService.getSingleOrder(orderId).then(setOrderData)}\n\n    useEffect(getOrderData, [])\n\n    if (orderData && config) {\n        const { easyId, createdAt, productList, amount } = orderData\n        const {name, phone, email, street, number, city, ticketLogo} = config\n        const displayProductList = productList.map(({ product: { name, price }, qty }) => (\n            <li key={name}>\n                <div\n                    className=\"list-element\"\n                >\n                    <p>{qty} X</p>\n                    <p>{name} | {price}€</p>\n                </div>\n            </li>\n        ))\n        return  (\n            < StyledAdminSingleOrder >\n                <Header text={`Pedido ${easyId}`} />\n                <div id=\"ticket\">\n                    <div id=\"restaurant-logo\">\n                        <img src={ticketLogo} alt={`${name} logo`} id=\"ticket-logo\" />\n                        <h1>{name}</h1>\n                    </div>\n                    <div id=\"order-info\">\n                        <div id=\"id-&-date\">\n                            <h2>Pedido {easyId}</h2>\n                            <p>{dateService.getDate(createdAt)} {dateService.getTime(createdAt)}</p>\n                        </div>\n                        <div id=\"product-list-container\" className=\"container\">\n                            <GenericTable content={displayProductList} id=\"product-list\" />\n                        </div>\n                        <div id=\"amount-container\" className=\"container\">\n                            <h3>Total {amount}€</h3>\n                        </div>\n                    </div>\n                    <div id=\"restaurant-info\">\n                        <p>{phone}</p>\n                        <p>{email}</p>\n                        <p>c/{street} {number}</p>\n                        <p>{city}</p>\n                    </div>\n                </div>\n                <div id=\"action-container\" className=\"container\">\n                    <div>\n                        <button className=\"btn btn-blue\">Pedir de nuevo</button>\n                    </div>\n                </div>\n            </StyledAdminSingleOrder >\n        )\n    }\n    \n    return (\n        <LoadingPage />\n    )\n}\n\nexport default OrderDetails\n","import React from 'react'\nimport Header from '../../common/Header'\nimport LoadingPage from '../../common/LoadingPage'\nimport { StyledClientDailyMenu } from '../../styled-components/client-side'\n\nfunction ClientDailyMenu({dailyMenu}) {\n    \n    if (dailyMenu) {\n        const { starters, mains, desserts, price } = dailyMenu\n        const displayProducts = arr => arr\n                                        .split(',')\n                                        .map(elem => (\n                                            <p key={elem}>{elem}</p>\n                                        ))\n        return (\n            <StyledClientDailyMenu >\n                <Header text=\"Menú del día\"/>\n                <div id=\"DM-container\" className=\"blackboard-bg\">\n                        <div className=\"field\">\n                            <h2>Primeros</h2>\n                            {displayProducts(starters)}\n                        </div>\n                        <div className=\"field\">\n                            <h2>Segundos</h2>\n                            {displayProducts(mains)}\n                        </div>\n                        <div className=\"field\">\n                            <h2 >Postres</h2>\n                            {displayProducts(desserts)}\n                        </div>\n                        <div className=\"field\">\n                            <h2>{price} €</h2>\n                            <p>Bebida y Postre o Café incluidos.</p>\n                        </div>\n                </div>\n            </StyledClientDailyMenu>\n        )\n    }\n\n    return (\n        <LoadingPage />\n    )\n}\n\nexport default ClientDailyMenu\n","import React from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { StyledFlowControl } from '../styled-components/admin-side'\n\nfunction FlowControl(props) {\n    const user = useSelector(state => state.user)\n\n    if (!user) {\n        return <Redirect to=\"/login\"/>\n    }\n\n    if (!user.adminPermissions) {\n        return (\n            <StyledFlowControl>\n                <div>\n                    <h2 className=\"super-text\">No tienes permisos para acceder a esta ruta.</h2>\n                    <Link to=\"/\">Volver a la página principal</Link>\n                </div>\n            </StyledFlowControl>\n        )\n    }\n\n    return (\n        <>\n            {props.children}\n        </>\n    )\n\n}\n\nexport default FlowControl","import React from 'react'\n\nfunction OrdersTable({tableheads, tbody}) {\n\n    const renderTableHeads = tableheads.map(elem => (\n        <th key={elem}>{elem}</th>\n    ))\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    {renderTableHeads}\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {tbody}\n            </tbody>\n        </table>\n    )\n}\n\nexport default OrdersTable","import React from 'react'\nimport OrdersTable from './OrdersTable'\n\nfunction InProgress({orders, cb}) {\n    const tableHeads = ['Pedido', 'H.Entrada']\n\n    const currentOrders = orders.map(({ easyId, createdAt, _id }) => (\n        <tr key={easyId}>\n            <th>{easyId}</th>\n            <td>{cb.getTime(createdAt)}</td>\n            <td>\n                <button\n                    className=\"btn btn-blue\"\n                    onClick={() => cb.redirectToDetails(_id)}\n                >Ver Detalles\n                </button>\n            </td>\n        </tr>\n    ))\n\n    return (\n        <OrdersTable tableheads={tableHeads} tbody={currentOrders}/>\n    )\n}\n\nexport default InProgress","import React from 'react'\nimport OrdersTable from './OrdersTable'\n\nfunction IncomingOrders({orders, cb}) {\n    const tableHeads = ['Pedido', 'H.Entrada']\n\n    const currentOrders = orders.map(({easyId, createdAt, _id}) => (\n        <tr key={easyId}>\n            <th>{easyId}</th>\n            <td>{cb.getTime(createdAt)}</td>\n            <td>\n                <button\n                    className=\"btn btn-blue\"\n                    onClick={() => cb.redirectToDetails(_id)}\n                >Ver Detalles\n                </button>\n            </td>\n        </tr>\n    ))\n\n        return (\n            <OrdersTable tableheads={tableHeads} tbody={currentOrders}/>\n        )\n}\n\nexport default IncomingOrders\n","import React from 'react'\nimport OrdersTable from './OrdersTable'\n\nfunction AllOrders({orders, cb}) {\n    const tableHeads = ['Pedido', 'Fecha', 'Estado']\n\n    const currentOrders = orders.map(({easyId, createdAt, _id, isFinished, inProgress}) => {\n        const displayStatus = (st1 = isFinished, st2 = inProgress) => {\n            if (!st1 && !st2) return \"Pedido Entrante\"\n            if (!st1 && st2) return \"En Curso\"\n            if (st1) return \"Finalizado\"\n        }\n        return (\n            <tr key={easyId}>\n                <th>{easyId}</th>\n                <td>{cb.getDate(createdAt)}</td>\n                <th>{displayStatus()}</th>\n                <td>\n                    <button\n                        className=\"btn btn-blue\"\n                        onClick={() => cb.redirectToDetails(_id)}\n                    >Ver Detalles\n                </button>\n                </td>\n            </tr>\n        )\n    })\n\n    return (\n        <OrdersTable tableheads={tableHeads} tbody={currentOrders}/>\n    )\n}\n\nexport default AllOrders","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport ordersService from '../../../tools/ordersService'\nimport { StyledAdminOrders } from '../../styled-components/admin-side'\nimport InProgress from './Tables/InProgress'\nimport IncomingOrders from './Tables/IncomingOrders'\nimport AllOrders from './Tables/AllOrders'\nimport dateService from '../../../tools/dateService'\n\nfunction Orders() {\n    const history = useHistory()\n    const [allOrders, setAllOrders] = useState([])\n    const [incomingOrders, setIncomingOrders] = useState([])\n    const [ordersInProgress, setOrdersInProgress] = useState([])\n\n    const ordersCb = {\n        redirectToDetails: (orderId) => history.push(`/admin/orders/${orderId}`),\n        getTime: (timestamp) => dateService.getTime(timestamp),\n        getDate: (timestamp) => dateService.getDate(timestamp)\n    }\n\n    const getAllOrders = () => {\n        ordersService.getAllOrders().then(setAllOrders)\n        ordersService.getIncomingOrders().then(setIncomingOrders)\n        ordersService.getOrdersInProgress().then(setOrdersInProgress)\n    }\n\n    useEffect(() => {\n        if (!allOrders.length) getAllOrders()\n    }, [])\n\n    return (\n        <StyledAdminOrders>\n            <div id=\"header\">\n                <h1 className=\"super-text\">Pedidos</h1>\n            </div>\n            <div className=\"field\" id=\"pending-orders\">\n                <h2>Pedidos Entrantes</h2>\n                <div>\n                    <IncomingOrders orders={incomingOrders} cb={ordersCb}/>\n                </div>\n            </div>\n            <div className=\"field\" id=\"completed-orders\">\n                <h2>Pedidos En Curso</h2>\n                <div>\n                    <InProgress orders={ordersInProgress} cb={ordersCb}/>\n                </div>\n            </div>\n            <div className=\"field\" id=\"order-list\">\n                <h2 id=\"list-title\">Todos los Pedidos</h2>\n                <div>\n                    <AllOrders orders={allOrders} cb={ordersCb}/>\n                </div>\n            </div>\n        </StyledAdminOrders>\n        \n    )\n}\n\nexport default Orders\n","import axios from 'axios'\nimport { toast } from 'react-toastify'\nclass ConfigService {\n    constructor() {\n        this.URL = `${process.env.REACT_APP_API_URL}/admin`\n    }\n\n    async getConfig(cb) {\n        const config = await axios.get(`${this.URL}/getconfig`)\n        return cb(config.data)\n    }\n\n    async sendConfig(data, cb) {\n        try {\n            const updatedConfig = await axios.post(`${this.URL}/updateconfig`, data)\n            cb(updatedConfig.data)\n            toast.success('Configuración cargada con éxito.', {\n                autoClose: 2000\n            })\n        } catch (error) {\n            toast.error('Error al cargar la configuración.', {\n                autoClose: 2000\n            })\n        }\n    }\n}\n\nexport default new ConfigService()","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport GenericTable from '../../common/GenericTable'\nimport ordersService from '../../../tools/ordersService'\nimport dateService from '../../../tools/dateService'\nimport { StyledAdminSingleOrder } from '../../styled-components/admin-side'\nimport Header from '../../common/Header'\nimport { toast } from 'react-toastify'\nimport configService from '../../../tools/configService'\nimport LoadingPage from '../../common/LoadingPage'\n\nfunction OrderDetails({match}) {\n    const {params: { id}} = match\n    const history = useHistory()\n    const config = useSelector(state => state.config)\n\n    const useOrderStored = (orderId = id) => {\n        const [currentOrder, setCurrentOrder] = useState({})\n        const getOrderData = () => { ordersService.getSingleOrder(orderId).then(setCurrentOrder) }\n        useEffect(getOrderData, [])\n        return currentOrder\n    }\n\n    const { amount, createdAt, easyId, inProgress, isFinished, productList, _id } = useOrderStored()\n\n\n    const displayProductList = !productList \n            ? null \n            : productList.map(({product: {name, price}, qty}) => (\n                <li key={name}>\n                    <div \n                        className=\"list-element\"\n                        >\n                        <p>{qty} X</p>\n                        <p>{name} | {price}€</p>\n                    </div>\n                </li>\n            ))\n\n    const displayStatus = (st1 = isFinished, st2 = inProgress) => {\n        if (!st1 && !st2) return \"Pedido Entrante\"\n        if (!st1 && st2) return \"En Curso\"\n        if (st1) return \"Finalizado\"\n    }\n\n    const actionFunctions = {\n        startOrder: (id, easyId) => {\n            ordersService.startOrder(id) \n            history.push('/admin/orders')\n            toast.info(\n                `El pedido ${easyId} se ha pasado a cocina.`,\n                {\n                    autoClose: 2200,\n                    position: \"top-center\",\n                    draggable: true\n                }\n            )\n        },\n        finishOrder: (id, easyId) => {\n            ordersService.finishOrder(id) \n            history.push('/admin/orders')\n            toast.success(\n                `El pedido ${easyId} se ha finalizado.`,\n                { \n                    autoClose: 2200,\n                    position: \"top-center\",\n                    draggable: true\n                }\n            )\n        }\n    }\n\n    const displayActionButton = (st1 = isFinished, st2 = inProgress) => {        \n        if (!st1 && !st2) return (\n            <button \n                className=\"btn btn-blue\" \n                onClick={() => actionFunctions.startOrder(_id, easyId)}\n                >\n                Pasar a Cocina\n                </button>\n            )\n        if (!st1 && st2) return (\n            <button \n                className=\"btn btn-red\" \n                onClick={() => actionFunctions.finishOrder(_id, easyId)}\n                >\n                Finalizar pedido\n                </button>\n            )\n            return null\n    }\n\n    if (config) {\n        const { name, phone, email, street, city, ticketLogo, number } = config\n\n        return (\n            <StyledAdminSingleOrder>\n                <Header text={`Pedido ${easyId}`} />\n                <div id=\"ticket\">\n                    <div id=\"restaurant-logo\">\n                        <img src={ticketLogo} alt={`${name} logo`} id=\"ticket-logo\"/>\n                        <h1>{name}</h1>\n                    </div>\n                    <div id=\"order-info\">\n                        <div id=\"id-&-date\">\n                            <h2>Pedido {easyId}</h2>\n                            <p>{dateService.getDate(createdAt)} {dateService.getTime(createdAt)}</p>\n                        </div>\n                        <div id=\"product-list-container\" className=\"container\">\n                            <GenericTable content={displayProductList} id=\"product-list\" />\n                        </div>\n                        <div id=\"amount-container\" className=\"container\">\n                            <h3>Total {amount}€</h3>\n                        </div>\n                    </div>\n                    <div id=\"restaurant-info\">\n                        <p>{phone}</p>\n                        <p>{email}</p>\n                        <p>c/{street} {number}</p>\n                        <p>{city}</p>\n                    </div>\n                </div>\n                <div id=\"action-container\" className=\"container\">\n                    <h2>Estado actual: {displayStatus()}</h2>\n                    <div>\n                        {displayActionButton()}\n                    </div>\n\n                </div>\n            </StyledAdminSingleOrder>\n        )\n    }\n\n    return (\n        <LoadingPage />\n    )\n\n    \n}\n\nexport default OrderDetails","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { StyledConfigForm } from '../../styled-components/admin-side'\nimport { toast } from 'react-toastify'\nimport productService from '../../../tools/productService'\nimport configService from '../../../tools/configService'\n\nfunction ConfigForm({configData}) {\n    const dispatch = useDispatch()\n    const initialState = {\n        _id: '',\n        name: '', \n        phone: '', \n        city: '', \n        street: '', \n        email: '', \n        number: '',\n        logo: '',\n        ticketLogo: ''\n    }\n    const [formData, setFormData] = useState(configData ? configData : initialState)\n\n\n    const sendConfigToRedux = data => dispatch({\n        type: \"SET_CONFIG\",\n        payload: data\n    })\n\n    const handleChange = ({target}) => {\n        setFormData({\n            ...formData,\n            [target.name]: target.value\n        })\n    }\n\n    const handleImageUrl = ({ target }) => {\n        toast.info('Cargando imagen, por favor espere la confirmación.', { autoClose: 1500 })\n        const imageToUpload = new FormData()\n        imageToUpload.append('image', target.files[0])\n        productService.upload(imageToUpload)\n            .then(res => {\n                setFormData({\n                    ...formData,\n                    [target.name]: res\n                })\n                toast.success('Imagen Cargada', { autoClose: 1500 })\n            })\n            .catch(() => toast.error('Error al cargar la imagen.', { autoClose: 1500 }))\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        configService.sendConfig(formData, sendConfigToRedux)\n    }\n\n        const {name, phone, city, street, email, number} = formData\n\n        return (\n            <StyledConfigForm>\n                    <form onSubmit={handleSubmit}>\n                        <label htmlFor=\"name\">Nombre del Restaurante</label>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            value={name}\n                            onChange={handleChange}\n                        />\n                        <label htmlFor=\"phone\">Numero de teléfono</label>\n                        <input\n                            type=\"text\"\n                            name=\"phone\"\n                            value={phone}\n                            onChange={handleChange}\n                        />\n                        <label htmlFor=\"city\">Ciudad</label>\n                        <input\n                            type=\"text\"\n                            name=\"city\"\n                            value={city}\n                            onChange={handleChange}\n                        />\n                        <label htmlFor=\"street\">Calle</label>\n                        <input\n                            type=\"text\"\n                            name=\"street\"\n                            value={street}\n                            onChange={handleChange}\n                        />\n                        <label htmlFor=\"number\">Número de edificio</label>\n                        <input\n                            type=\"text\"\n                            name=\"number\"\n                            value={number}\n                            onChange={handleChange}\n                        />\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            value={email}\n                            onChange={handleChange}\n                        />\n                        <label htmlFor=\"logo\">Logo Principal</label>\n                        <input\n                            type=\"file\"\n                            name=\"logo\"\n                            onChange={handleImageUrl} />\n                        <label htmlFor=\"ticketLogo\">Logo Ticket</label>\n                        <input \n                            type=\"file\" \n                            name=\"ticketLogo\"\n                            onChange={handleImageUrl}\n                        />\n                        <input type=\"submit\" value=\"CARGAR CONFIGURACIÓN\" className=\"btn btn-blue\" />\n                    </form>\n            </StyledConfigForm>\n        )\n}\n\nexport default ConfigForm\n","import React from 'react'\nimport ConfigForm from './ConfigForm'\nimport { useSelector } from 'react-redux'\nimport { StyledAdminConfig } from '../../styled-components/admin-side'\n\nfunction Config() {\n    const config = useSelector(state => state.config)\n\n    if (!config) {\n        return (\n            <ConfigForm />\n        )\n    }\n\n    return (\n        <StyledAdminConfig>\n            <ConfigForm configData={config}/>\n        </StyledAdminConfig>\n    )\n}\n\nexport default Config\n","import axios from 'axios'\nimport { toast } from 'react-toastify'\nclass DailyMenuService {\n    constructor() {\n        this.URL = `${process.env.REACT_APP_API_URL}/admin`\n    }\n\n    async getDailyMenu(cb) {\n        const { data } = await axios.get(`${this.URL}/getdailymenu`)\n\n        const { starters, mains, desserts, price, withBread, withCoffee, _id } = data\n\n        const unifyArray = (arr) => arr.join(',')\n\n        if (data) {\n            const normalizedData = {\n                _id,\n                starters: unifyArray(starters),\n                mains: unifyArray(mains),\n                desserts: unifyArray(desserts),\n                price,\n                withBread,\n                withCoffee\n            }\n            return cb(normalizedData)\n        }\n    }\n\n    async sendDailyMenu(data, cb) {\n        try {\n            const {_id, starters, mains, desserts, price, withBread, withCoffee } = data\n\n            const normalizeArrays = (string) => string.split(',').map(word => word.trim())\n\n            const body = {\n                _id,\n                starters: normalizeArrays(starters),\n                mains: normalizeArrays(mains),\n                desserts: normalizeArrays(desserts),\n                price,\n                withBread,\n                withCoffee\n            }\n\n            const updatedDailyMenu = await axios.post(`${this.URL}/updatedailymenu`, body)\n            cb(updatedDailyMenu.data)\n            toast.success('Menú diario actualizado con éxito.', {\n                autoClose: 2000\n            })\n        } catch (error) {\n            toast.error('Error al cargar el menú.', {\n                autoClose: 2000\n            })\n        }\n    }\n}\n\nexport default new DailyMenuService()","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport dailyMenuService from '../../../tools/dailyMenuService'\nimport { StyledFormDailyMenu } from '../../styled-components/admin-side'\n\nfunction DailyMenuForm() {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const dailyMenu = useSelector(state => state.dailyMenu)\n    const initialForm = {\n        _id: '',\n        starters: '',\n        mains: '',\n        desserts: '',\n        withCoffee: false,\n        withBread: false,\n        price: 0\n    }\n    const [formData, setFormData] = useState(dailyMenu ? dailyMenu : initialForm)\n\n    const dataFromDB = () => dailyMenuService.getDailyMenu(setFormData)\n\n    const sendDataToRedux = data => dispatch({\n        type: \"SET_DMENU\",\n        payload: data\n    })\n\n    useEffect(() => {\n        if (!dailyMenu) dataFromDB()\n    }, [])\n\n    const handleChange = ({target}) => {\n        setFormData({\n            ...formData,\n            [target.name]: target.value\n        })\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        await dailyMenuService.sendDailyMenu(formData, sendDataToRedux)\n    }\n\n    const { starters, mains, desserts, price} = formData\n    return (\n        <StyledFormDailyMenu onSubmit={handleSubmit}>\n            <div>\n                <label htmlFor=\"starters\">Primeros</label>\n                <input\n                    type=\"text\"\n                    name=\"starters\"\n                    placeholder=\"Ensalada, Paella, Melón con Jamón...\"\n                    value={starters}\n                    onChange={handleChange}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"mains\">Segundos</label>\n                <input\n                    type=\"text\"\n                    name=\"mains\"\n                    value={mains}\n                    onChange={handleChange}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"desserts\">Postres</label>\n                <input\n                    type=\"text\"\n                    name=\"desserts\"\n                    value={desserts}\n                    onChange={handleChange}\n                />\n            </div>\n            <p className=\"disabled\">Separa todos los platos con una coma \",\"</p>\n            <div id=\"price-container\">\n                <label htmlFor=\"price\">Precio</label>\n                <input\n                    type=\"number\"\n                    name=\"price\"\n                    value={price}\n                    onChange={handleChange}\n                />\n            </div>\n            <div id=\"button-container\">\n                <input\n                    className=\"btn btn-blue\"\n                    type=\"submit\"\n                    value=\"ACTUALIZAR\"\n                />\n            </div>\n        </StyledFormDailyMenu>\n    )\n}\n\nexport default DailyMenuForm\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { StyledDailyMenu } from '../../styled-components/admin-side'\nimport DailyMenuForm from './DailyMenuForm'\n\nfunction AdminDailyMenu() {\n    const history = useHistory()\n    const redirectToDailyMenu = () => history.push('/dailymenu')\n\n    return (\n        <StyledDailyMenu>\n            <div id=\"header\">\n                <h1 className=\"super-text\">DailyMenu</h1>\n            </div>\n            <div \n                id=\"form-container\"\n                className=\"blackboard-bg field\">\n                <DailyMenuForm />\n                <div id=\"button-container\">\n                    <button\n                        onClick={redirectToDailyMenu}\n                        className=\"btn btn-blue\">\n                        VER MENÚ\n                    </button>\n                </div>\n            </div>\n        </StyledDailyMenu>\n    )\n}\n\nexport default AdminDailyMenu\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom'\nimport Menu from './components/common/Menu'\nimport Login from './components/common/Login'\nimport Signup from './components/common/Signup'\nimport NavBar from './components/common/NavBar'\nimport Home from './components/common/Home'\nimport NoMatch from './components/common/NoMatch'\nimport UnderConstruction from './components/common/UnderConstruction'\n\nimport ProductDetails from './components/client-side/products/ProductDetails'\nimport ProductList from './components/client-side/products/ProductList'\nimport Profile from './components/client-side/profile/Profile'\nimport Cart from './components/client-side/cart/Cart'\nimport ClientOrderDetails from './components/client-side/order/ClientOrderDetails'\nimport ClientDailyMenu from './components/client-side/dailyMenu/ClientDailyMenu'\n\nimport FlowControl from './components/admin-side/FlowControl'\nimport Orders from './components/admin-side/Orders/Orders';\nimport OrderDetails from './components/admin-side/Orders/OrderDetails';\nimport Config from './components/admin-side/config/Config'\nimport { isAdminRoute } from './tools/pathFunctions';\nimport configService from './tools/configService'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css'\nimport AdminDailyMenu from './components/admin-side/dailyMenu/AdminDailyMenu'\nimport dailyMenuService from './tools/dailyMenuService'\n\n\nfunction App() {\n  const user = useSelector(state => state.user)\n  const dailyMenu = useSelector(state => state.dailyMenu)\n  const config = useSelector(state => state.config)\n  const dispatch = useDispatch()\n  const { pathname } = useLocation()\n  const mainViewSelector = isAdminRoute(pathname) ? 'admin-main' : 'client-main'\n\n  const sendConfigToRedux = data => dispatch({\n    type: \"SET_CONFIG\",\n    payload: data\n  })\n\n  const sendDailyMenuToRedux = data => dispatch({\n    type: \"SET_DMENU\",\n    payload: data\n  })\n\n  const getDataAndDispatch = (\n      configCb = sendConfigToRedux, \n      dMenuCb = sendDailyMenuToRedux, \n      ) => {\n        if (!dailyMenu) dailyMenuService.getDailyMenu(dMenuCb)\n        if (!config) configService.getConfig(configCb)\n  }\n\n  useEffect(getDataAndDispatch, [])\n\n  return (\n    <main className=\"default-colors\" id={mainViewSelector}>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route\n          exact\n          path=\"/admin\"\n          render={(props) => <FlowControl children={<Home {...props} />} />}\n        />\n        <Route exact path=\"/cart\" component={Cart}/>\n        <Route exact path=\"/menu\" component={Menu} />\n        <Route path=\"/menu/product/:id\" component={ProductDetails} />\n        <Route path=\"/menu/:category\" component={ProductList} />\n        <Route path=\"/dailymenu\" render={(props) => \n          <ClientDailyMenu \n            {...props} \n            dailyMenu={dailyMenu}\n          />} \n        />\n        <Route path=\"/places\" component={UnderConstruction} />\n        <Route path=\"/about\" component={UnderConstruction} />\n        <Route path=\"/order/:id\" component={ClientOrderDetails} />\n        <Route \n          path=\"/admin/menu\" \n          render={(props) => \n              <FlowControl children={<Menu {...props} />  }/>\n            }\n        />\n        <Route\n          path=\"/admin/dailymenu\"\n          render={(props) =>\n            <FlowControl children={<AdminDailyMenu {...props} />} />\n          }\n        />\n        <Route\n          exact\n          path=\"/admin/orders\"\n          render={(props) =>\n            <FlowControl children={<Orders {...props} />} />\n          }\n        />\n        <Route\n          path=\"/admin/orders/:id\"\n          render={(props) =>\n            <FlowControl children={<OrderDetails {...props} />} />\n          }\n        />\n        <Route\n          path=\"/admin/config\"\n          render={(props) => \n            <FlowControl children={<Config {...props} />} />\n          }  \n        />\n        <Route path=\"/admin/signup\" component={Signup} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/login\" component={Login} /> \n        <Route exact path=\"/profile\">\n          {!user ? <Redirect to=\"/login\"/> : <Profile />}\n        </Route>\n        <Route path=\"*\" component={NoMatch} />\n      </Switch>\n        <ToastContainer/>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const logUser = (action) => action.payload\n\nconst addOrder = (state, action) => {\n    return {\n        ...state,\n        orders: [...state.orders, action.payload]\n    }\n}\n\nexport {\n    logUser,\n    addOrder\n}","import { logUser, addOrder } from '../actions/userActions'\n\nconst initialUser = JSON.parse(localStorage.getItem('currentUser')) || null\n\n\nconst userReducer = (state = initialUser, action) => {\n    switch (action.type) {\n        case 'LOG_USER':\n            return logUser(action)\n        case 'ADD_ORDER':\n            return addOrder(state, action)\n        default:\n            return state\n    }\n}\n\nexport {\n    initialUser,\n    userReducer\n}","const setConfig = (action) => action.payload\n\nexport {\n    setConfig\n}","const setProducts = (action) => action.payload\n\nexport {\n    setProducts\n}","import { setProducts } from '../actions/productsActions'\nconst initialProducts = []\n\nconst productsReducer = (state = initialProducts, action) => {\n    switch (action.type) {\n        case 'SET_PRODUCTS':\n            return setProducts(action)\n        default:\n            return state\n    }\n}\n\nexport {\n    initialProducts,\n    productsReducer\n}","const addProduct = (state, action) => [...state, {product: action.payload, qty: 1 }]\n\nconst qtyUp = (state, action) => {\n    return Object.assign([], state.map(item => {\n        const itemRequired = action.payload._id\n        const existentItem = item.product._id\n        const match = existentItem === itemRequired\n\n        if (match) item.qty += 1\n\n        return item\n    }))\n}\n\nconst qtyDwn = (state, action) => {\n    return Object.assign([], state.map(item => {\n        const itemRequired = action.payload._id\n        const existentItem = item.product._id\n        const match = existentItem === itemRequired\n\n        if (match) item.qty -= 1\n\n        return item\n    }))\n}\n\nconst removeProduct = (state, action) => state.filter((elem, idx) => idx !== action.payload)\n\nexport {\n    addProduct,\n    qtyUp,\n    qtyDwn,\n    removeProduct\n}","import { addProduct, qtyUp, qtyDwn, removeProduct } from '../actions/cartActions'\n\nconst initialCart = JSON.parse(localStorage.getItem('currentCart')) || []\n\nconst cartReducers = (state = initialCart, action) => {\n    switch (action.type) {\n        case 'ADD_PRODUCT':\n            return addProduct(state, action)\n        case 'QTY_UP':\n            return qtyUp(state, action)\n        case 'QTY_DWN':\n            return qtyDwn(state, action)\n        case 'REMOVE_PRODUCT':\n            return removeProduct(state, action)\n        case 'EMPTY_CART':\n            return []\n        default:\n            return state\n    }\n}\n\nexport {\n    initialCart,\n    cartReducers\n}","const setDailyMenu = (action) => action.payload\n\nexport {\n    setDailyMenu\n}","import { createStore, combineReducers } from 'redux'\n\nimport { userReducer } from './reducers/userReducer'\nimport { configReducer } from './reducers/configReducer'\nimport { productsReducer } from './reducers/productsReducer'\nimport { cartReducers } from './reducers/cartReducers'\nimport { dailyMenuReducer } from './reducers/dailyMenuReducers'\n\nconst allReducers = combineReducers({\n    user: userReducer,\n    products: productsReducer,\n    cart: cartReducers,\n    config: configReducer,\n    dailyMenu: dailyMenuReducer\n})\n\nconst store = createStore(allReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport {\n    store\n}","import { setConfig } from '../actions/configActions'\n\nconst initialConfig = null\n\nconst configReducer = (state = initialConfig, action) => {\n    switch (action.type) {\n        case 'SET_CONFIG':\n            return setConfig(action)\n        default:\n            return state\n    }\n}\n\nexport {\n    initialConfig,\n    configReducer\n}","import { setDailyMenu } from '../actions/dailyMenuActions'\nimport { initialConfig } from './configReducer'\n\nconst initialDailyMenu = null\n\nconst dailyMenuReducer = (state = initialConfig, action) => {\n    switch (action.type) {\n        case \"SET_DMENU\":\n            return setDailyMenu(action)\n        default:\n            return state\n    }\n}\n\nexport {\n    dailyMenuReducer\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\nimport './index.css'\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}